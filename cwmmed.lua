-- This file was generated using Luraph Obfuscator v12.5 by memcorrupt.

local lIli1Iil1Il1ililiIi1I = assert local II1IlII1IiI1iIi1iil = select local III11iIlIiii1li1l1i = tonumber local l111l1Iii1ll1I1l1ii = unpack local lIlIiil1l1l11l1liIIIi = pcall local liI1III1liiI1lII1iI = setfenv local lIl111IlI111l1iliIiII = setmetatable local Il11l1IillI1ilI111I = type local I1IIliliIiII1i111II = getfenv local iiI1i1I1111Il1iii1I = tostring local lIll1llli1lil1lliiill = error local lIlllII1l1lIIil1lII11 = string.sub local lIliiIIliiIlliiIII1il = string.byte local lI1iiIiIl1i11ili1lI = string.char local l1ilIl1iIIiI1i1IiI1 = string.rep local IIiIIllillII1IIlI11 = string.gsub local llilli1ilIlIlIi1Iil = string.match local I11II1Il1i1iIl11lI1 = table.insert local lIlli1ll1Il1iiIiIIII1 = lIliiIIliiIlliiIII1il("<", 1) local IilIl1i1i11Ill1i1II, li1I1i1i1I11i1i111i = #{992}, #{ 700, 3176, 4740, 4183, 974, 4515, 4943, 187, 4639, 4612, 1565, 562, 6808, 5151, 6662, 5402, 6368, 5750, 1733, 6701, 1587, 1737, 3349, 6162 } + lIlli1ll1Il1iiIiIIII1 + 130987 local lIlIlll1lll11ii1i1III = {} local lIlIlII1iI1ill1l1iIli = 1 local lIIii11II1II1lIli11, IIllliil1I1I1llIil1 local function lIlliil1Ilii1IIIii1il(lIl1IllIIlliIlilllili, llllii1II1iilIIIi1l) local iIl1llIII1Il1IIII1I lIl1IllIIlliIlilllili = IIiIIllillII1IIlI11(lIlllII1l1lIIil1lII11(lIl1IllIIlliIlilllili, 5), "..", function(lIlllIIiIi11IiIiIi1li) if lIliiIIliiIlliiIII1il(lIlllIIiIi11IiIiIi1li, 2) == 72 then iIl1llIII1Il1IIII1I = III11iIlIiii1li1l1i(lIlllII1l1lIIil1lII11(lIlllIIiIi11IiIiIi1li, 1, 1)) return "" else local liiiliII1I1l1liIl1i = lI1iiIiIl1i11ili1lI(III11iIlIiii1li1l1i(lIlllIIiIi11IiIiIi1li, 16)) if iIl1llIII1Il1IIII1I then local lIlili1IlI11Ii1I1lili = l1ilIl1iIIiI1i1IiI1(liiiliII1I1l1liIl1i, iIl1llIII1Il1IIII1I) iIl1llIII1Il1IIII1I = nil return lIlili1IlI11Ii1I1lili else return liiiliII1I1l1liIl1i end end end) local function liii11IiI1II1liI1l1() local lIllIIiIilIiillI11III = lIliiIIliiIlliiIII1il(lIl1IllIIlliIlilllili, lIlIlII1iI1ill1l1iIli, lIlIlII1iI1ill1l1iIli) lIlIlII1iI1ill1l1iIli = lIlIlII1iI1ill1l1iIli + 1 return lIllIIiIilIiillI11III end local function IIliIIIIIll1liIiii1() local lIllIIiIilIiillI11III, liiiliII1I1l1liIl1i, lIlili1IlI11Ii1I1lili, IIl11lIIill1l1iiIi1 = lIliiIIliiIlliiIII1il(lIl1IllIIlliIlilllili, lIlIlII1iI1ill1l1iIli, lIlIlII1iI1ill1l1iIli + 3) lIlIlII1iI1ill1l1iIli = lIlIlII1iI1ill1l1iIli + 4 return IIl11lIIill1l1iiIi1 * 16777216 + lIlili1IlI11Ii1I1lili * 65536 + liiiliII1I1l1liIl1i * 256 + lIllIIiIilIiillI11III end local function iiIIlII1IIllIi1ll11(llil1IIilI1lllI11il, iililII11iI1Il11iiI, Iill1iiI1lii1i1lIi1) if Iill1iiI1lii1i1lIi1 then local l1i11liIill1IllIlII, il11iIi1IIilIiiIili = 0, 0 for l1i1Iil1i1lillI11i1 = iililII11iI1Il11iiI, Iill1iiI1lii1i1lIi1 do l1i11liIill1IllIlII = l1i11liIill1IllIlII + 2 ^ il11iIi1IIilIiiIili * iiIIlII1IIllIi1ll11(llil1IIilI1lllI11il, l1i1Iil1i1lillI11i1) il11iIi1IIilIiiIili = il11iIi1IIilIiiIili + 1 end return l1i11liIill1IllIlII else local IilIlIil1111IiilIli = 2 ^ (iililII11iI1Il11iiI - 1) return IilIlIil1111IiilIli <= llil1IIilI1lllI11il % (IilIlIil1111IiilIli + IilIlIil1111IiilIli) and 1 or 0 end end local function lIlIilIilil1lllIll1II() local lIllIIiIilIiillI11III, liiiliII1I1l1liIl1i = IIliIIIIIll1liIiii1(), IIliIIIIIll1liIiii1() if lIllIIiIilIiillI11III == 0 and liiiliII1I1l1liIl1i == 0 then return 0 end return (-2 * iiIIlII1IIllIi1ll11(liiiliII1I1l1liIl1i, 32) + 1) * 2 ^ (iiIIlII1IIllIi1ll11(liiiliII1I1l1liIl1i, 21, 31) - 1023) * ((iiIIlII1IIllIi1ll11(liiiliII1I1l1liIl1i, 1, 20) * 4294967296 + lIllIIiIilIiillI11III) / 4503599627370496 + 1) end local lIllliil1I11iii1II1I1 = bit or bit32 local ii1li11i1li1llIiill = lIllliil1I11iii1II1I1 and lIllliil1I11iii1II1I1.bxor or function(lIllIIiIilIiillI11III, liiiliII1I1l1liIl1i) local I11II1iIiI1li1IIl1I = 1 local lIlili1IlI11Ii1I1lili = 0 while lIllIIiIilIiillI11III > 0 and liiiliII1I1l1liIl1i > 0 do local iii1lIIIiiil1II1ii1 = lIllIIiIilIiillI11III % 2 local IiillIIIil1lliiIiII = liiiliII1I1l1liIl1i % 2 if iii1lIIIiiil1II1ii1 ~= IiillIIIil1lliiIiII then lIlili1IlI11Ii1I1lili = lIlili1IlI11Ii1I1lili + I11II1iIiI1li1IIl1I end lIllIIiIilIiillI11III = (lIllIIiIilIiillI11III - iii1lIIIiiil1II1ii1) / 2 liiiliII1I1l1liIl1i = (liiiliII1I1l1liIl1i - IiillIIIil1lliiIiII) / 2 I11II1iIiI1li1IIl1I = I11II1iIiI1li1IIl1I * 2 end if lIllIIiIilIiillI11III < liiiliII1I1l1liIl1i then lIllIIiIilIiillI11III = liiiliII1I1l1liIl1i end while lIllIIiIilIiillI11III > 0 do local iii1lIIIiiil1II1ii1 = lIllIIiIilIiillI11III % 2 if iii1lIIIiiil1II1ii1 > 0 then lIlili1IlI11Ii1I1lili = lIlili1IlI11Ii1I1lili + I11II1iIiI1li1IIl1I end lIllIIiIilIiillI11III = (lIllIIiIilIiillI11III - iii1lIIIiiil1II1ii1) / 2 I11II1iIiI1li1IIl1I = I11II1iIiI1li1IIl1I * 2 end return lIlili1IlI11Ii1I1lili end local function Ili1II11ilII1iilii1(lIl11IIliIii1IIilii1l) local liI1i1IIII1iiilIlI1 = { lIliiIIliiIlliiIII1il(lIl1IllIIlliIlilllili, lIlIlII1iI1ill1l1iIli, lIlIlII1iI1ill1l1iIli + 3) } lIlIlII1iI1ill1l1iIli = lIlIlII1iI1ill1l1iIli + 4 local lIllIIiIilIiillI11III = ii1li11i1li1llIiill(liI1i1IIII1iiilIlI1[1], IIllliil1I1I1llIil1) local liiiliII1I1l1liIl1i = ii1li11i1li1llIiill(liI1i1IIII1iiilIlI1[2], IIllliil1I1I1llIil1) local lIlili1IlI11Ii1I1lili = ii1li11i1li1llIiill(liI1i1IIII1iiilIlI1[3], IIllliil1I1I1llIil1) local IIl11lIIill1l1iiIi1 = ii1li11i1li1llIiill(liI1i1IIII1iiilIlI1[4], IIllliil1I1I1llIil1) IIllliil1I1I1llIil1 = (141 * IIllliil1I1I1llIil1 + lIl11IIliIii1IIilii1l) % 256 return IIl11lIIill1l1iiIi1 * 16777216 + lIlili1IlI11Ii1I1lili * 65536 + liiiliII1I1l1liIl1i * 256 + lIllIIiIilIiillI11III end local function li1illI11li1I1IIiII(iiIiIIlIIlIiII1l1l1) local IIlillliII1iI1lIill = IIliIIIIIll1liIiii1() local lIl1l11iI1iiiIi1i11ii = "" for l1i1Iil1i1lillI11i1 = IilIl1i1i11Ill1i1II, IIlillliII1iI1lIill do lIl1l11iI1iiiIi1i11ii = lIl1l11iI1iiiIi1i11ii .. lI1iiIiIl1i11ili1lI(ii1li11i1li1llIiill(lIliiIIliiIlliiIII1il(lIl1IllIIlliIlilllili, lIlIlII1iI1ill1l1iIli + l1i1Iil1i1lillI11i1 - 1), lIIii11II1II1lIli11)) lIIii11II1II1lIli11 = (iiIiIIlIIlIiII1l1l1 * lIIii11II1II1lIli11 + 255) % 256 end lIlIlII1iI1ill1l1iIli = lIlIlII1iI1ill1l1iIli + IIlillliII1iI1lIill return lIl1l11iI1iiiIi1i11ii end lIIii11II1II1lIli11 = liii11IiI1II1liI1l1() IIllliil1I1I1llIil1 = liii11IiI1II1liI1l1() local lIl11ilI11ii111iIilli = {} for l1i1Iil1i1lillI11i1 = IilIl1i1i11Ill1i1II, liii11IiI1II1liI1l1() do local Ilil1Ilii1llllll1i1 = liii11IiI1II1liI1l1() local li1I11IiiIil11I1III = (l1i1Iil1i1lillI11i1 - 1) * 2 lIl11ilI11ii111iIilli[li1I11IiiIil11I1III] = iiIIlII1IIllIi1ll11(Ilil1Ilii1llllll1i1, 1, 4) lIl11ilI11ii111iIilli[li1I11IiiIil11I1III + 1] = iiIIlII1IIllIi1ll11(Ilil1Ilii1llllll1i1, 5, 8) end local function ll1iIlII1lIIlI1liIl() local Ili11lii1111ll1iilI = { {}, {}, {}, nil, nil, nil, {} } Ili11lii1111ll1iilI[4] = liii11IiI1II1liI1l1() liii11IiI1II1liI1l1() local Iili1i1illI1I1i1i1l = IIliIIIIIll1liIiii1() - (#{ 3647, 2483, 1863, 4554, 6625, 2983, 329, 1239, 505, 1727, 1735, 4331, 3995, 4811, 3750, 6929, 3468, 58, 6017, 4705, 5786, 6294, 960, 5395 } + lIlli1ll1Il1iiIiIIII1 + 133682) local Ii1i1liiii1li1I11lI = liii11IiI1II1liI1l1() for l1i1Iil1i1lillI11i1 = IilIl1i1i11Ill1i1II, Iili1i1illI1I1i1i1l do local i1IlIIiIi111l1lI11i local Il11l1IillI1ilI111I = liii11IiI1II1liI1l1() if Il11l1IillI1ilI111I == #{ 1001, 813, 5949, 4978, 712, 4888, 6589, 3092, 6813, 3131, 177, 3140, 6544, 3504, 6229, 6282, 3080, 1634, 4773, 697, 2079 } + lIlli1ll1Il1iiIiIIII1 + 1 then i1IlIIiIi111l1lI11i = #{ 742, 2407, 33, 264, 476, 394, 962, 2607, 5553, 6812, 1794, 4533, 6299, 2714, 3574, 6639, 2463, 5387, 1020, 4429, 2820, 6703, 4037 } + lIlli1ll1Il1iiIiIIII1 + 98580 == #{ 3210, 5747, 2750, 5452, 5875, 1176, 4395, 4904, 5789, 2019, 3034, 3232, 4978, 6261, 2708, 1293, 1387, 5705, 2407, 6085, 2427, 2288, 5906, 3704 } + lIlli1ll1Il1iiIiIIII1 + 87914 end if Il11l1IillI1ilI111I == #{ 3558, 1997, 4994, 5476, 2253, 1033, 1831, 3378, 2020, 6301, 1070, 1950, 550, 6118, 1869, 5194, 3415, 4158, 1261, 3292, 6165 } + lIlli1ll1Il1iiIiIIII1 + 96 then i1IlIIiIi111l1lI11i = liii11IiI1II1liI1l1() + IIliIIIIIll1liIiii1() + lIlIilIilil1lllIll1II() end if Il11l1IillI1ilI111I == #{ 1183, 3100, 4940, 2404, 626, 16, 2220, 5068, 1158, 5090, 5386, 1852, 189, 1840, 6883, 4397, 1544, 6771, 1036, 4095, 4921, 4785, 2834, 3870 } + lIlli1ll1Il1iiIiIIII1 + 84 then i1IlIIiIi111l1lI11i = liii11IiI1II1liI1l1() + IIliIIIIIll1liIiii1() + lIlIilIilil1lllIll1II() end if Il11l1IillI1ilI111I == #{ 2581, 6644, 6458, 1207, 2087, 3747, 62, 619, 2001, 3350, 4632, 3450, 6529, 2207, 4602, 5408, 2088, 2371, 618, 3610, 2731, 5378, 4849 } + lIlli1ll1Il1iiIiIIII1 + 29 then i1IlIIiIi111l1lI11i = IIliIIIIIll1liIiii1() end if Il11l1IillI1ilI111I == #{ 5286, 1723, 6152, 200, 2257, 4954, 6462, 4186, 6151, 5412, 57, 3104, 4631, 1132, 5131, 6931, 6267, 1807, 1198, 6274, 2361, 1719, 6529 } + lIlli1ll1Il1iiIiIIII1 + -13 then i1IlIIiIi111l1lI11i = #{ 6096, 6861, 6595, 6201, 6536, 4295, 1627, 4995, 6498, 4854, 4242, 1672, 6158, 2835, 6046, 2391, 5552, 4437, 3327, 5693, 1906 } + lIlli1ll1Il1iiIiIIII1 + 113466 == #{ 6096, 6861, 6595, 6201, 6536, 4295, 1627, 4995, 6498, 4854, 4242, 1672, 6158, 2835, 6046, 2391, 5552, 4437, 3327, 5693, 1906 } + lIlli1ll1Il1iiIiIIII1 + 113466 end if Il11l1IillI1ilI111I == #{ 3820, 1400, 3099, 28, 2290, 4361, 1029, 4746, 2751, 2003, 6723, 1631, 6137, 5150, 688, 6616, 4903, 1802, 5525, 2912, 4601, 5325, 4965 } + lIlli1ll1Il1iiIiIIII1 + 95 then i1IlIIiIi111l1lI11i = IIliIIIIIll1liIiii1() end if Il11l1IillI1ilI111I == #{ 344, 6206, 3536, 5211, 3454, 76, 6533, 2216, 3571, 3147, 3242, 3533, 6373, 1286, 4753, 975, 3649, 5709, 5422, 5795, 4717, 6191, 231 } + lIlli1ll1Il1iiIiIIII1 + -56 then i1IlIIiIi111l1lI11i = lIlIilIilil1lllIll1II() end if Il11l1IillI1ilI111I == #{ 5970, 3320, 6016, 2822, 1467, 3326, 5345, 3671, 5327, 3913, 2624, 3293, 4001, 2028, 4968, 563, 3817, 18, 3103, 249, 1855, 3543, 5455, 6576 } + lIlli1ll1Il1iiIiIIII1 + 43 then i1IlIIiIi111l1lI11i = lIlIilIilil1lllIll1II() end if Il11l1IillI1ilI111I == #{ 4072, 2479, 247, 3860, 2843, 6268, 6148, 5572, 867, 3993, 1239, 2727, 5926, 5559, 4913, 2102, 4000, 2586, 5650, 5534, 71, 3727, 6031 } + lIlli1ll1Il1iiIiIIII1 + 71 then i1IlIIiIi111l1lI11i = lIlllII1l1lIIil1lII11(li1illI11li1I1IIiII(Ii1i1liiii1li1I11lI), #{5646, 4387}) end Ili11lii1111ll1iilI[7][l1i1Iil1i1lillI11i1 - IilIl1i1i11Ill1i1II] = i1IlIIiIi111l1lI11i end liii11IiI1II1liI1l1() local Iili1i1illI1I1i1i1l = IIliIIIIIll1liIiii1() for l1i1Iil1i1lillI11i1 = IilIl1i1i11Ill1i1II, Iili1i1illI1I1i1i1l do Ili11lii1111ll1iilI[2][l1i1Iil1i1lillI11i1 - IilIl1i1i11Ill1i1II] = ll1iIlII1lIIlI1liIl() end IIliIIIIIll1liIiii1() local Iili1i1illI1I1i1i1l = IIliIIIIIll1liIiii1() for l1i1Iil1i1lillI11i1 = IilIl1i1i11Ill1i1II, Iili1i1illI1I1i1i1l do Ili11lii1111ll1iilI[1][l1i1Iil1i1lillI11i1] = IIliIIIIIll1liIiii1() end Ili11lii1111ll1iilI[6] = liii11IiI1II1liI1l1() Ili11lii1111ll1iilI[5] = liii11IiI1II1liI1l1() liii11IiI1II1liI1l1() IIliIIIIIll1liIiii1() IIliIIIIIll1liIiii1() IIliIIIIIll1liIiii1() local lIlilliIl1I11ililll = IIliIIIIIll1liIiii1() - (#{ 6104, 1452, 1827, 5772, 1270, 1778, 6180, 3750, 4075, 889, 6203, 2117, 1158, 3902, 863, 5072, 234, 2836, 4483, 5894, 4042, 1297, 2347 } + lIlli1ll1Il1iiIiIIII1 + 133711) local lIlIII1lilIli1iIl1II1 = liii11IiI1II1liI1l1() for l1i1Iil1i1lillI11i1 = IilIl1i1i11Ill1i1II, lIlilliIl1I11ililll do local i1iIl1Iii1l1ii1illl = { nil, nil, nil, nil, nil, nil, nil, nil, nil, nil } local Ilil1Ilii1llllll1i1 = Ili1II11ilII1iilii1(lIlIII1lilIli1iIl1II1) i1iIl1Iii1l1ii1illl[82742] = iiIIlII1IIllIi1ll11(Ilil1Ilii1llllll1i1, #{1270}, #{ 567, 2333, 2886, 2097, 312, 1508, 6080, 834, 1542, 5369, 1603, 2168, 6896, 339, 3027, 3565, 5411, 2358 }) i1iIl1Iii1l1ii1illl[6] = iiIIlII1IIllIi1ll11(Ilil1Ilii1llllll1i1, #{ 2352, 5629, 1907, 2633, 5388, 6321, 2286, 6371, 4313, 1344, 2117, 698, 4521, 770, 578, 4823, 6091, 5272, 947 }, #{ 1254, 6380, 11, 4442, 5861, 5494, 5391, 613, 2263, 6809, 4594, 6730, 3095, 1170, 3090, 1218, 6022, 5759, 1049, 3359, 2000, 4950, 807 } + lIlli1ll1Il1iiIiIIII1 + -57) i1iIl1Iii1l1ii1illl[7] = iiIIlII1IIllIi1ll11(Ilil1Ilii1llllll1i1, #{4919}, #{ 1265, 1952, 2039, 4725, 6330, 876, 3025, 142, 3541, 3597, 3305, 1887, 276, 6499, 5421, 5973, 1133, 5714 }) i1iIl1Iii1l1ii1illl[4] = iiIIlII1IIllIi1ll11(Ilil1Ilii1llllll1i1, #{ 3502, 5283, 76, 1163, 4048, 2979, 4528, 3438, 618, 2475, 6454, 1495, 340, 3589, 1924, 6267, 3636, 1259, 3991, 6306 } + lIlli1ll1Il1iiIiIIII1 + -53, #{ 1313, 3510, 914, 6780, 2573, 3061, 3312, 4766, 4655, 5004, 2001, 6676, 6118, 4622, 402, 664, 1682, 5678, 5265, 6531, 88 } + lIlli1ll1Il1iiIiIIII1 + -49) i1iIl1Iii1l1ii1illl[8] = iiIIlII1IIllIi1ll11(Ilil1Ilii1llllll1i1, #{ 1441, 169, 755, 1704, 2580, 5121, 5183, 4480, 1761, 3329 }, #{ 5125, 295, 6767, 238, 3481, 529, 715, 3506, 3017, 3833, 5287, 6951, 5815, 1669, 1520, 1158, 1588, 6411 }) i1iIl1Iii1l1ii1illl[1] = iiIIlII1IIllIi1ll11(Ilil1Ilii1llllll1i1, #{5998}, #{ 2413, 2124, 3598, 5934, 5352, 6701, 3688, 3631, 3397 }) i1iIl1Iii1l1ii1illl[66678] = iiIIlII1IIllIi1ll11(Ilil1Ilii1llllll1i1, #{ 1173, 6016, 3232, 3848, 431, 1161, 431, 2224, 3683, 1505 }, #{ 3231, 2058, 283, 3413, 2757, 6769, 1355, 1478, 2632, 631, 3676, 818, 5762, 1412, 2725, 658, 4339, 2874 }) i1iIl1Iii1l1ii1illl[11253] = iiIIlII1IIllIi1ll11(Ilil1Ilii1llllll1i1, #{ 5344, 1520, 4414, 2349, 2444, 1025, 5894, 6786, 667, 1749, 5399, 1862, 4168, 1612, 4958, 1618, 5881, 4800, 1122, 4021, 3772, 5475, 3154 } + lIlli1ll1Il1iiIiIIII1 + -56, #{ 5058, 4400, 5582, 6474, 3378, 1307, 2407, 2378, 6482, 1569, 4409, 2759, 2087, 4737, 1717, 60, 892, 1076, 1547, 5696, 3765, 5177 } + lIlli1ll1Il1iiIiIIII1 + -50) i1iIl1Iii1l1ii1illl[74031] = iiIIlII1IIllIi1ll11(Ilil1Ilii1llllll1i1, #{ 6706, 2001, 1147, 4058, 771, 417, 2550, 6750, 5234, 4185, 1623, 5624, 1093, 6139, 5283, 5655, 2845, 6797, 1498 }, #{ 4037, 1313, 1393, 1144, 6114, 1311, 6093, 2893, 23, 5276, 859, 3538, 4661, 3640, 6068, 54, 959, 688, 68, 3847, 5914, 1012, 2632 } + lIlli1ll1Il1iiIiIIII1 + -57) Ili11lii1111ll1iilI[3][l1i1Iil1i1lillI11i1] = i1iIl1Iii1l1ii1illl end for l1i1Iil1i1lillI11i1 = IilIl1i1i11Ill1i1II, lIlilliIl1I11ililll do local i1iIl1Iii1l1ii1illl = Ili11lii1111ll1iilI[3][l1i1Iil1i1lillI11i1] local llliIiii11iIiIIli1I = lIl11ilI11ii111iIilli[i1iIl1Iii1l1ii1illl[4]] if llliIiii11iIiIIli1I == #{ 3378, 2683, 3491, 5941 } then i1iIl1Iii1l1ii1illl[9] = Ili11lii1111ll1iilI[7][i1iIl1Iii1l1ii1illl[7]] end if llliIiii11iIiIIli1I == #{2312, 115} and i1iIl1Iii1l1ii1illl[8] > 255 then i1iIl1Iii1l1ii1illl[2] = true i1iIl1Iii1l1ii1illl[3] = Ili11lii1111ll1iilI[7][i1iIl1Iii1l1ii1illl[8] - 256] end if llliIiii11iIiIIli1I == #{5333} and i1iIl1Iii1l1ii1illl[1] > 255 then i1iIl1Iii1l1ii1illl[10] = true i1iIl1Iii1l1ii1illl[5] = Ili11lii1111ll1iilI[7][i1iIl1Iii1l1ii1illl[1] - 256] end if llliIiii11iIiIIli1I == #{ 1645, 6130, 6923 } then if i1iIl1Iii1l1ii1illl[1] > 255 then i1iIl1Iii1l1ii1illl[10] = true i1iIl1Iii1l1ii1illl[5] = Ili11lii1111ll1iilI[7][i1iIl1Iii1l1ii1illl[1] - 256] end if i1iIl1Iii1l1ii1illl[8] > 255 then i1iIl1Iii1l1ii1illl[2] = true i1iIl1Iii1l1ii1illl[3] = Ili11lii1111ll1iilI[7][i1iIl1Iii1l1ii1illl[8] - 256] end end end liii11IiI1II1liI1l1() return Ili11lii1111ll1iilI end local function lIl11iliiIlili1l1iIII(Ili11lii1111ll1iilI, llllii1II1iilIIIi1l, Ili1IIIllI11Ii11ii1) local iI1lII111IIii1l1lIi, ilIIIIIi11llIiIilI1 = 17, 13 local lIlIl11lIiI1l1I1il1Ii = Ili11lii1111ll1iilI[3] local lIlilI1IlI1IIIIIIIlIl = 6 local lIlIIliiIII1iIiIIlIli = Ili11lii1111ll1iilI[2] local lllI1l1iil1liIIil1i = Ili11lii1111ll1iilI[4] local lIl1I1liiIIll1IiIIlil = Ili11lii1111ll1iilI[5] local lIlIIlll11i1IlIII1iI1 = 4 local IiIIIllii1ilil1I1iI = Ili11lii1111ll1iilI[1] local lIlIIi1iIliilllilil11 = 1 local function l1li1il1II1Ii111lII(...) local l11iI1lilIii1il1li1 = 0 local iI1iIl1l1IiilIil1il = { l111l1Iii1ll1I1l1ii({}, 1, lIl1I1liiIIll1IiIIlil) } local iIl11il1iIlI1I11ii1 = 1 local lIl1lii1il1iil11ilII1 = {} local lIlI111IIiililll111i1 = {} local llllii1II1iilIIIi1l = I1IIliliIiII1i111II() local Iil1il1l11IiiII1iI1 = { ... } local iii1illliIliI1il1lI = #Iil1il1l11IiiII1iI1 - 1 for l1i1Iil1i1lillI11i1 = 0, iii1illliIliI1il1lI do if l1i1Iil1i1lillI11i1 < lllI1l1iil1liIIil1i then iI1iIl1l1IiilIil1il[l1i1Iil1i1lillI11i1] = Iil1il1l11IiiII1iI1[l1i1Iil1i1lillI11i1 + 1] end end local function i1iIiI1II1IIiIill1l(...) local lIlili1IlI11Ii1I1lili = II1IlII1IiI1iIi1iil("#", ...) local lIIl1Ill1i11iIIil11 = { ... } return lIlili1IlI11Ii1I1lili, lIIl1Ill1i11iIIil11 end local function iI1lIi1I111Il1li1Ii() while true do local ii1liIliIilIIl111Il = lIlIl11lIiI1l1I1il1Ii[iIl11il1iIlI1I11ii1] local lIlI1iii11IlllIii11l1 = ii1liIliIilIIl111Il[4] iIl11il1iIlI1I11ii1 = iIl11il1iIlI1I11ii1 + 1 if lIlI1iii11IlllIii11l1 >= 15 then if lIlI1iii11IlllIii11l1 >= 22 then if lIlI1iii11IlllIii11l1 >= 26 then if lIlI1iii11IlllIii11l1 >= 28 then if lIlI1iii11IlllIii11l1 == 29 then llllii1II1iilIIIi1l[ii1liIliIilIIl111Il[9]] = iI1iIl1l1IiilIil1il[ii1liIliIilIIl111Il[6]] else for l1i1Iil1i1lillI11i1 = ii1liIliIilIIl111Il[6], ii1liIliIilIIl111Il[1] do iI1iIl1l1IiilIil1il[l1i1Iil1i1lillI11i1] = nil end end elseif lIlI1iii11IlllIii11l1 == 27 then local liiiliII1I1l1liIl1i, lIlili1IlI11Ii1I1lili if ii1liIliIilIIl111Il[10] then liiiliII1I1l1liIl1i = ii1liIliIilIIl111Il[5] else liiiliII1I1l1liIl1i = iI1iIl1l1IiilIil1il[ii1liIliIilIIl111Il[1]] end if ii1liIliIilIIl111Il[2] then lIlili1IlI11Ii1I1lili = ii1liIliIilIIl111Il[3] else lIlili1IlI11Ii1I1lili = iI1iIl1l1IiilIil1il[ii1liIliIilIIl111Il[8]] end iI1iIl1l1IiilIil1il[ii1liIliIilIIl111Il[6]] = liiiliII1I1l1liIl1i + lIlili1IlI11Ii1I1lili else local lIiIliIil11llliIIiI = ii1liIliIilIIl111Il[6] local Iil1il1l11IiiII1iI1 = ii1liIliIilIIl111Il[1] local i1III1l1i111iIiIl1i = ii1liIliIilIIl111Il[8] local Ilii1IlII1lI1iIliII, iii1Ii1ilIIlliI11li, iI1lIi1I111Il1li1Ii if Iil1il1l11IiiII1iI1 ~= 1 then if Iil1il1l11IiiII1iI1 ~= 0 then iii1Ii1ilIIlliI11li = lIiIliIil11llliIIiI + Iil1il1l11IiiII1iI1 - 1 else iii1Ii1ilIIlliI11li = l11iI1lilIii1il1li1 end iii1Ii1ilIIlliI11li, Ilii1IlII1lI1iIliII = i1iIiI1II1IIiIill1l(iI1iIl1l1IiilIil1il[lIiIliIil11llliIIiI](l111l1Iii1ll1I1l1ii(iI1iIl1l1IiilIil1il, lIiIliIil11llliIIiI + 1, iii1Ii1ilIIlliI11li))) else iii1Ii1ilIIlliI11li, Ilii1IlII1lI1iIliII = i1iIiI1II1IIiIill1l(iI1iIl1l1IiilIil1il[lIiIliIil11llliIIiI]()) end if i1III1l1i111iIiIl1i ~= 1 then if i1III1l1i111iIiIl1i ~= 0 then iii1Ii1ilIIlliI11li = lIiIliIil11llliIIiI + i1III1l1i111iIiIl1i - 2 l11iI1lilIii1il1li1 = iii1Ii1ilIIlliI11li + 1 else iii1Ii1ilIIlliI11li = iii1Ii1ilIIlliI11li + lIiIliIil11llliIIiI - 1 l11iI1lilIii1il1li1 = iii1Ii1ilIIlliI11li end iI1lIi1I111Il1li1Ii = 0 for l1i1Iil1i1lillI11i1 = lIiIliIil11llliIIiI, iii1Ii1ilIIlliI11li do iI1lIi1I111Il1li1Ii = iI1lIi1I111Il1li1Ii + 1 iI1iIl1l1IiilIil1il[l1i1Iil1i1lillI11i1] = Ilii1IlII1lI1iIliII[iI1lIi1I111Il1li1Ii] end else l11iI1lilIii1il1li1 = lIiIliIil11llliIIiI - 1 end for l1i1Iil1i1lillI11i1 = l11iI1lilIii1il1li1 + 1, lIl1I1liiIIll1IiIIlil do iI1iIl1l1IiilIil1il[l1i1Iil1i1lillI11i1] = nil end end elseif lIlI1iii11IlllIii11l1 < 24 then if lIlI1iii11IlllIii11l1 ~= 23 then local lIiIliIil11llliIIiI = ii1liIliIilIIl111Il[6] local iiiIli1Ii11iiIIIlil = iI1iIl1l1IiilIil1il[lIiIliIil11llliIIiI + 2] local lIlIlII1iI1ill1l1iIli = iI1iIl1l1IiilIil1il[lIiIliIil11llliIIiI] + iiiIli1Ii11iiIIIlil iI1iIl1l1IiilIil1il[lIiIliIil11llliIIiI] = lIlIlII1iI1ill1l1iIli if iiiIli1Ii11iiIIIlil > 0 then if lIlIlII1iI1ill1l1iIli <= iI1iIl1l1IiilIil1il[lIiIliIil11llliIIiI + 1] then iIl11il1iIlI1I11ii1 = iIl11il1iIlI1I11ii1 + (ii1liIliIilIIl111Il[7] - li1I1i1i1I11i1i111i) iI1iIl1l1IiilIil1il[lIiIliIil11llliIIiI + 3] = lIlIlII1iI1ill1l1iIli end elseif lIlIlII1iI1ill1l1iIli >= iI1iIl1l1IiilIil1il[lIiIliIil11llliIIiI + 1] then iIl11il1iIlI1I11ii1 = iIl11il1iIlI1I11ii1 + (ii1liIliIilIIl111Il[7] - li1I1i1i1I11i1i111i) iI1iIl1l1IiilIil1il[lIiIliIil11llliIIiI + 3] = lIlIlII1iI1ill1l1iIli end else local lIll1il1llIiI1iIi1l1l = iI1iIl1l1IiilIil1il[ii1liIliIilIIl111Il[1]] local lIlili1IlI11Ii1I1lili if ii1liIliIilIIl111Il[2] then lIlili1IlI11Ii1I1lili = ii1liIliIilIIl111Il[3] else lIlili1IlI11Ii1I1lili = iI1iIl1l1IiilIil1il[ii1liIliIilIIl111Il[8]] end iI1iIl1l1IiilIil1il[ii1liIliIilIIl111Il[6] + 1] = lIll1il1llIiI1iIi1l1l iI1iIl1l1IiilIil1il[ii1liIliIilIIl111Il[6]] = lIll1il1llIiI1iIi1l1l[lIlili1IlI11Ii1I1lili] end elseif lIlI1iii11IlllIii11l1 ~= 25 then iI1iIl1l1IiilIil1il[ii1liIliIilIIl111Il[6]] = ii1liIliIilIIl111Il[9] elseif not not iI1iIl1l1IiilIil1il[ii1liIliIilIIl111Il[6]] == (ii1liIliIilIIl111Il[8] == 0) then iIl11il1iIlI1I11ii1 = iIl11il1iIlI1I11ii1 + 1 end elseif lIlI1iii11IlllIii11l1 < 18 then if lIlI1iii11IlllIii11l1 < 16 then Ili1IIIllI11Ii11ii1[ii1liIliIilIIl111Il[1]] = iI1iIl1l1IiilIil1il[ii1liIliIilIIl111Il[6]] elseif lIlI1iii11IlllIii11l1 ~= 17 then local lIi1IIIlI1IilIi1i11 = iI1iIl1l1IiilIil1il[ii1liIliIilIIl111Il[1]] for l1i1Iil1i1lillI11i1 = ii1liIliIilIIl111Il[1] + 1, ii1liIliIilIIl111Il[8] do lIi1IIIlI1IilIi1i11 = lIi1IIIlI1IilIi1i11 .. iI1iIl1l1IiilIil1il[l1i1Iil1i1lillI11i1] end iI1iIl1l1IiilIil1il[ii1liIliIilIIl111Il[6]] = lIi1IIIlI1IilIi1i11 elseif ii1liIliIilIIl111Il[8] == 46 then iIl11il1iIlI1I11ii1 = iIl11il1iIlI1I11ii1 - 1 lIlIl11lIiI1l1I1il1Ii[iIl11il1iIlI1I11ii1] = { [4] = 28, [6] = (ii1liIliIilIIl111Il[6] - 185) % 256, [1] = (ii1liIliIilIIl111Il[1] - 185) % 256 } elseif ii1liIliIilIIl111Il[8] == 25 then iIl11il1iIlI1I11ii1 = iIl11il1iIlI1I11ii1 - 1 lIlIl11lIiI1l1I1il1Ii[iIl11il1iIlI1I11ii1] = { [4] = 19, [6] = (ii1liIliIilIIl111Il[6] - 119) % 256, [1] = (ii1liIliIilIIl111Il[1] - 119) % 256 } else iI1iIl1l1IiilIil1il[ii1liIliIilIIl111Il[6]] = iI1iIl1l1IiilIil1il[ii1liIliIilIIl111Il[1]] end elseif lIlI1iii11IlllIii11l1 >= 20 then if lIlI1iii11IlllIii11l1 ~= 21 then iI1iIl1l1IiilIil1il[ii1liIliIilIIl111Il[6]] = -iI1iIl1l1IiilIil1il[ii1liIliIilIIl111Il[1]] else local iIli1iiiIi1Ii1iIiIi = lIlIIliiIII1iIiIIlIli[ii1liIliIilIIl111Il[7]] local liIil11I1l1ll1l1i1l = {} if iIli1iiiIi1Ii1iIiIi[lIlilI1IlI1IIIIIIIlIl] > 0 then do local IIIi1lli1iIIilIIlii = {} liIil11I1l1ll1l1i1l = lIl111IlI111l1iliIiII({}, { __index = function(lIIl1Ill1i11iIIil11, lIlIIi11IIlilill1ilIl) local iIIi1lIi1liIilIlI11 = IIIi1lli1iIIilIIlii[lIlIIi11IIlilill1ilIl] return iIIi1lIi1liIilIlI11[1][iIIi1lIi1liIilIlI11[2]] end, __newindex = function(lIIl1Ill1i11iIIil11, lIlIIi11IIlilill1ilIl, lIlIIlil1lI11lII1IlII) local iIIi1lIi1liIilIlI11 = IIIi1lli1iIIilIIlii[lIlIIi11IIlilill1ilIl] iIIi1lIi1liIilIlI11[1][iIIi1lIi1liIilIlI11[2]] = lIlIIlil1lI11lII1IlII end }) for l1i1Iil1i1lillI11i1 = 1, iIli1iiiIi1Ii1iIiIi[lIlilI1IlI1IIIIIIIlIl] do local lIIi1IlIllIIi1li11i = lIlIl11lIiI1l1I1il1Ii[iIl11il1iIlI1I11ii1] if lIIi1IlIllIIi1li11i[lIlIIlll11i1IlIII1iI1] == iI1lII111IIii1l1lIi then IIIi1lli1iIIilIIlii[l1i1Iil1i1lillI11i1 - 1] = { iI1iIl1l1IiilIil1il, lIIi1IlIllIIi1li11i[lIlIIi1iIliilllilil11] } elseif lIIi1IlIllIIi1li11i[lIlIIlll11i1IlIII1iI1] == ilIIIIIi11llIiIilI1 then IIIi1lli1iIIilIIlii[l1i1Iil1i1lillI11i1 - 1] = { Ili1IIIllI11Ii11ii1, lIIi1IlIllIIi1li11i[lIlIIi1iIliilllilil11] } end iIl11il1iIlI1I11ii1 = iIl11il1iIlI1I11ii1 + 1 end if not lIl1lii1il1iil11ilII1[iI1iIl1l1IiilIil1il] then lIl1lii1il1iil11ilII1[iI1iIl1l1IiilIil1il] = {IIIi1lli1iIIilIIlii} else I11II1Il1i1iIl11lI1(lIl1lii1il1iil11ilII1[iI1iIl1l1IiilIil1il], IIIi1lli1iIIilIIlii) end end end local lil111IiII1lllil1Il = lIl11iliiIlili1l1iIII(iIli1iiiIi1Ii1iIiIi, llllii1II1iilIIIi1l, liIil11I1l1ll1l1i1l) iI1iIl1l1IiilIil1il[ii1liIliIilIIl111Il[6]] = lil111IiII1lllil1Il end elseif lIlI1iii11IlllIii11l1 == 19 then if ii1liIliIilIIl111Il[8] == 28 then iIl11il1iIlI1I11ii1 = iIl11il1iIlI1I11ii1 - 1 lIlIl11lIiI1l1I1il1Ii[iIl11il1iIlI1I11ii1] = { [4] = 20, [6] = (ii1liIliIilIIl111Il[6] - 94) % 256, [1] = (ii1liIliIilIIl111Il[1] - 94) % 256 } else iI1iIl1l1IiilIil1il[ii1liIliIilIIl111Il[6]] = not iI1iIl1l1IiilIil1il[ii1liIliIilIIl111Il[1]] end else local lIlili1IlI11Ii1I1lili if ii1liIliIilIIl111Il[2] then lIlili1IlI11Ii1I1lili = ii1liIliIilIIl111Il[3] else lIlili1IlI11Ii1I1lili = iI1iIl1l1IiilIil1il[ii1liIliIilIIl111Il[8]] end iI1iIl1l1IiilIil1il[ii1liIliIilIIl111Il[6]] = iI1iIl1l1IiilIil1il[ii1liIliIilIIl111Il[1]][lIlili1IlI11Ii1I1lili] end elseif lIlI1iii11IlllIii11l1 >= 7 then if lIlI1iii11IlllIii11l1 < 11 then if lIlI1iii11IlllIii11l1 < 9 then if lIlI1iii11IlllIii11l1 == 8 then local liiiliII1I1l1liIl1i, lIlili1IlI11Ii1I1lili if ii1liIliIilIIl111Il[10] then liiiliII1I1l1liIl1i = ii1liIliIilIIl111Il[5] else liiiliII1I1l1liIl1i = iI1iIl1l1IiilIil1il[ii1liIliIilIIl111Il[1]] end if ii1liIliIilIIl111Il[2] then lIlili1IlI11Ii1I1lili = ii1liIliIilIIl111Il[3] else lIlili1IlI11Ii1I1lili = iI1iIl1l1IiilIil1il[ii1liIliIilIIl111Il[8]] end iI1iIl1l1IiilIil1il[ii1liIliIilIIl111Il[6]] = liiiliII1I1l1liIl1i * lIlili1IlI11Ii1I1lili else iIl11il1iIlI1I11ii1 = iIl11il1iIlI1I11ii1 + (ii1liIliIilIIl111Il[7] - li1I1i1i1I11i1i111i) end elseif lIlI1iii11IlllIii11l1 == 10 then local liiiliII1I1l1liIl1i, lIlili1IlI11Ii1I1lili if ii1liIliIilIIl111Il[10] then liiiliII1I1l1liIl1i = ii1liIliIilIIl111Il[5] else liiiliII1I1l1liIl1i = iI1iIl1l1IiilIil1il[ii1liIliIilIIl111Il[1]] end if ii1liIliIilIIl111Il[2] then lIlili1IlI11Ii1I1lili = ii1liIliIilIIl111Il[3] else lIlili1IlI11Ii1I1lili = iI1iIl1l1IiilIil1il[ii1liIliIilIIl111Il[8]] end iI1iIl1l1IiilIil1il[ii1liIliIilIIl111Il[6]] = liiiliII1I1l1liIl1i - lIlili1IlI11Ii1I1lili else local lIiIliIil11llliIIiI = ii1liIliIilIIl111Il[6] iI1iIl1l1IiilIil1il[lIiIliIil11llliIIiI] = lIli1Iil1Il1ililiIi1I(III11iIlIiii1li1l1i(iI1iIl1l1IiilIil1il[lIiIliIil11llliIIiI]), "`for` initial value must be a number") iI1iIl1l1IiilIil1il[lIiIliIil11llliIIiI + 1] = lIli1Iil1Il1ililiIi1I(III11iIlIiii1li1l1i(iI1iIl1l1IiilIil1il[lIiIliIil11llliIIiI + 1]), "`for` limit value must be a number") iI1iIl1l1IiilIil1il[lIiIliIil11llliIIiI + 2] = lIli1Iil1Il1ililiIi1I(III11iIlIiii1li1l1i(iI1iIl1l1IiilIil1il[lIiIliIil11llliIIiI + 2]), "`for` step value must be a number") iI1iIl1l1IiilIil1il[lIiIliIil11llliIIiI] = iI1iIl1l1IiilIil1il[lIiIliIil11llliIIiI] - iI1iIl1l1IiilIil1il[lIiIliIil11llliIIiI + 2] iIl11il1iIlI1I11ii1 = iIl11il1iIlI1I11ii1 + (ii1liIliIilIIl111Il[7] - li1I1i1i1I11i1i111i) end elseif lIlI1iii11IlllIii11l1 < 13 then if lIlI1iii11IlllIii11l1 == 12 then if ii1liIliIilIIl111Il[8] == 85 then iIl11il1iIlI1I11ii1 = iIl11il1iIlI1I11ii1 - 1 lIlIl11lIiI1l1I1il1Ii[iIl11il1iIlI1I11ii1] = { [4] = 2, [6] = (ii1liIliIilIIl111Il[6] - 226) % 256, [1] = (ii1liIliIilIIl111Il[1] - 226) % 256 } else local iillI1I1I1iIlIII1Il = ii1liIliIilIIl111Il[6] local lIlII111I1iIil1lI1IIl = {} for iI1lIIiIiIiIii1iiII, IIIi1lli1iIIilIIlii in pairs(lIl1lii1il1iil11ilII1[iI1iIl1l1IiilIil1il]) do for iI1lIIiIiIiIii1iiII, iIIi1lIi1liIilIlI11 in pairs(IIIi1lli1iIIilIIlii) do if iIIi1lIi1liIilIlI11[1] == iI1iIl1l1IiilIil1il and iillI1I1I1iIlIII1Il <= iIIi1lIi1liIilIlI11[2] then local i1ll1ill1iIlllIiIii = iIIi1lIi1liIilIlI11[2] if not lIlII111I1iIil1lI1IIl[i1ll1ill1iIlllIiIii] then lIl11iliiIlili1l1iIII(lIlI111IIiililll111i1, iI1iIl1l1IiilIil1il[i1ll1ill1iIlllIiIii]) lIlII111I1iIil1lI1IIl[i1ll1ill1iIlllIiIii] = #lIlI111IIiililll111i1 end iIIi1lIi1liIilIlI11[1] = lIlI111IIiililll111i1 iIIi1lIi1liIilIlI11[2] = lIlII111I1iIil1lI1IIl[i1ll1ill1iIlllIiIii] end end end end elseif ii1liIliIilIIl111Il[1] == 188 then iIl11il1iIlI1I11ii1 = iIl11il1iIlI1I11ii1 - 1 lIlIl11lIiI1l1I1il1Ii[iIl11il1iIlI1I11ii1] = { [4] = 15, [6] = (ii1liIliIilIIl111Il[6] - 238) % 256, [1] = (ii1liIliIilIIl111Il[8] - 238) % 256 } elseif ii1liIliIilIIl111Il[1] == 66 then iIl11il1iIlI1I11ii1 = iIl11il1iIlI1I11ii1 - 1 lIlIl11lIiI1l1I1il1Ii[iIl11il1iIlI1I11ii1] = { [4] = 25, [6] = (ii1liIliIilIIl111Il[6] - 105) % 256, [8] = (ii1liIliIilIIl111Il[8] - 105) % 256 } else local lIiIliIil11llliIIiI = ii1liIliIilIIl111Il[6] local li1I11IiiIil11I1III = lIiIliIil11llliIIiI + 2 local lIi1IIIlI1IilIi1i11 = { iI1iIl1l1IiilIil1il[lIiIliIil11llliIIiI](iI1iIl1l1IiilIil1il[lIiIliIil11llliIIiI + 1], iI1iIl1l1IiilIil1il[lIiIliIil11llliIIiI + 2]) } for l1i1Iil1i1lillI11i1 = 1, ii1liIliIilIIl111Il[8] do iI1iIl1l1IiilIil1il[li1I11IiiIil11I1III + l1i1Iil1i1lillI11i1] = lIi1IIIlI1IilIi1i11[l1i1Iil1i1lillI11i1] end if iI1iIl1l1IiilIil1il[lIiIliIil11llliIIiI + 3] ~= nil then iI1iIl1l1IiilIil1il[lIiIliIil11llliIIiI + 2] = iI1iIl1l1IiilIil1il[lIiIliIil11llliIIiI + 3] else iIl11il1iIlI1I11ii1 = iIl11il1iIlI1I11ii1 + 1 end end elseif lIlI1iii11IlllIii11l1 ~= 14 then iI1iIl1l1IiilIil1il[ii1liIliIilIIl111Il[6]] = Ili1IIIllI11Ii11ii1[ii1liIliIilIIl111Il[1]] elseif ii1liIliIilIIl111Il[8] == 150 then iIl11il1iIlI1I11ii1 = iIl11il1iIlI1I11ii1 - 1 lIlIl11lIiI1l1I1il1Ii[iIl11il1iIlI1I11ii1] = { [4] = 17, [6] = (ii1liIliIilIIl111Il[6] - 193) % 256, [1] = (ii1liIliIilIIl111Il[1] - 193) % 256 } elseif ii1liIliIilIIl111Il[8] == 139 then iIl11il1iIlI1I11ii1 = iIl11il1iIlI1I11ii1 - 1 lIlIl11lIiI1l1I1il1Ii[iIl11il1iIlI1I11ii1] = { [4] = 13, [6] = (ii1liIliIilIIl111Il[6] - 224) % 256, [1] = (ii1liIliIilIIl111Il[1] - 224) % 256 } else local lIiIliIil11llliIIiI = ii1liIliIilIIl111Il[6] local Iili1i1illI1I1i1i1l = ii1liIliIilIIl111Il[1] local IlII1iI1lliIilillII = Iili1i1illI1I1i1i1l > 0 and Iili1i1illI1I1i1i1l - 1 or iii1illliIliI1il1lI - lllI1l1iil1liIIil1i if IlII1iI1lliIilillII < 0 then IlII1iI1lliIilillII = -1 end for l1i1Iil1i1lillI11i1 = lIiIliIil11llliIIiI, lIiIliIil11llliIIiI + IlII1iI1lliIilillII do iI1iIl1l1IiilIil1il[l1i1Iil1i1lillI11i1] = Iil1il1l11IiiII1iI1[lllI1l1iil1liIIil1i + (l1i1Iil1i1lillI11i1 - lIiIliIil11llliIIiI) + 1] end if Iili1i1illI1I1i1i1l == 0 then l11iI1lilIii1il1li1 = lIiIliIil11llliIIiI + IlII1iI1lliIilillII for l1i1Iil1i1lillI11i1 = l11iI1lilIii1il1li1 + 1, lIl1I1liiIIll1IiIIlil do iI1iIl1l1IiilIil1il[l1i1Iil1i1lillI11i1] = nil end end end elseif lIlI1iii11IlllIii11l1 >= 3 then if lIlI1iii11IlllIii11l1 < 5 then if lIlI1iii11IlllIii11l1 == 4 then local liiiliII1I1l1liIl1i, lIlili1IlI11Ii1I1lili if ii1liIliIilIIl111Il[10] then liiiliII1I1l1liIl1i = ii1liIliIilIIl111Il[5] else liiiliII1I1l1liIl1i = iI1iIl1l1IiilIil1il[ii1liIliIilIIl111Il[1]] end if ii1liIliIilIIl111Il[2] then lIlili1IlI11Ii1I1lili = ii1liIliIilIIl111Il[3] else lIlili1IlI11Ii1I1lili = iI1iIl1l1IiilIil1il[ii1liIliIilIIl111Il[8]] end if liiiliII1I1l1liIl1i == lIlili1IlI11Ii1I1lili ~= (ii1liIliIilIIl111Il[6] ~= 0) then iIl11il1iIlI1I11ii1 = iIl11il1iIlI1I11ii1 + 1 end else local liiiliII1I1l1liIl1i, lIlili1IlI11Ii1I1lili if ii1liIliIilIIl111Il[10] then liiiliII1I1l1liIl1i = ii1liIliIilIIl111Il[5] else liiiliII1I1l1liIl1i = iI1iIl1l1IiilIil1il[ii1liIliIilIIl111Il[1]] end if ii1liIliIilIIl111Il[2] then lIlili1IlI11Ii1I1lili = ii1liIliIilIIl111Il[3] else lIlili1IlI11Ii1I1lili = iI1iIl1l1IiilIil1il[ii1liIliIilIIl111Il[8]] end if liiiliII1I1l1liIl1i < lIlili1IlI11Ii1I1lili ~= (ii1liIliIilIIl111Il[6] ~= 0) then iIl11il1iIlI1I11ii1 = iIl11il1iIlI1I11ii1 + 1 end end elseif lIlI1iii11IlllIii11l1 == 6 then iI1iIl1l1IiilIil1il[ii1liIliIilIIl111Il[6]] = ii1liIliIilIIl111Il[1] ~= 0 if ii1liIliIilIIl111Il[8] ~= 0 then iIl11il1iIlI1I11ii1 = iIl11il1iIlI1I11ii1 + 1 end else iI1iIl1l1IiilIil1il[ii1liIliIilIIl111Il[6]] = { l111l1Iii1ll1I1l1ii(lIlIlll1lll11ii1i1III, 1, ii1liIliIilIIl111Il[1] == 0 and 255 or ii1liIliIilIIl111Il[1]) } end elseif lIlI1iii11IlllIii11l1 < 1 then iI1iIl1l1IiilIil1il[ii1liIliIilIIl111Il[6]] = llllii1II1iilIIIi1l[ii1liIliIilIIl111Il[9]] elseif lIlI1iii11IlllIii11l1 == 2 then lIl1lii1il1iil11ilII1[iI1iIl1l1IiilIil1il] = nil local lIiIliIil11llliIIiI = ii1liIliIilIIl111Il[6] local iillIl1iIliill1ilIi = ii1liIliIilIIl111Il[1] if iillIl1iIliill1ilIi == 1 then return true end local iii1Ii1ilIIlliI11li = lIiIliIil11llliIIiI + iillIl1iIliill1ilIi - 2 if iillIl1iIliill1ilIi == 0 then iii1Ii1ilIIlliI11li = l11iI1lilIii1il1li1 end return true, lIiIliIil11llliIIiI, iii1Ii1ilIIlliI11li else local liiiliII1I1l1liIl1i, lIlili1IlI11Ii1I1lili if ii1liIliIilIIl111Il[10] then liiiliII1I1l1liIl1i = ii1liIliIilIIl111Il[5] else liiiliII1I1l1liIl1i = iI1iIl1l1IiilIil1il[ii1liIliIilIIl111Il[1]] end if ii1liIliIilIIl111Il[2] then lIlili1IlI11Ii1I1lili = ii1liIliIilIIl111Il[3] else lIlili1IlI11Ii1I1lili = iI1iIl1l1IiilIil1il[ii1liIliIilIIl111Il[8]] end iI1iIl1l1IiilIil1il[ii1liIliIilIIl111Il[6]][liiiliII1I1l1liIl1i] = lIlili1IlI11Ii1I1lili end end end local iiIll1i1IIlIl1IIIi1, lIl1l11iI1iiiIi1i11ii, iillI1I1I1iIlIII1Il, lIl1iIl1iiil1IIIllIIl = lIlIiil1l1l11l1liIIIi(iI1lIi1I111Il1li1Ii) if iiIll1i1IIlIl1IIIi1 then if iillI1I1I1iIlIII1Il then return l111l1Iii1ll1I1l1ii(iI1iIl1l1IiilIil1il, iillI1I1I1iIlIII1Il, lIl1iIl1iiil1IIIllIIl) end else lIll1llli1lil1lliiill("Luraph Script:" .. (IiIIIllii1ilil1I1iI[iIl11il1iIlI1I11ii1 - 1] or "") .. ": " .. iiI1i1I1111Il1iii1I(lIl1l11iI1iiiIi1i11ii), 0) end end liI1III1liiI1lII1iI(l1li1il1II1Ii111lII, llllii1II1iilIIIi1l) return l1li1il1II1Ii111lII end local lIlII111I1iIil1lI1IIl = ll1iIlII1lIIlI1liIl() return lIl11iliiIlili1l1iIII(lIlII111I1iIil1lI1IIl, llllii1II1iilIIIi1l)() end return lIlliil1Ilii1IIIii1illiliIiII1i111II()) 
