-- This file was generated using Luraph Obfuscator v12.5 by memcorrupt.

local illl111ii1i111lliIl = assert local lI1Iii1111lI111lI1i = select local lIlIilIIiilliiiiI11il = tonumber local lll11lIlI1l111I1lI1 = unpack local lIlIliI1Ii11Il1ll11Ii = pcall local lll1iiiIl111Il1liil = setfenv local l1IiIIiIilIIliiil1i = setmetatable local iIl1IIIl1iI1iilIiIi = type local ililIil1iilIl111iIi = getfenv local IIiiIllIii11111i1iI = tostring local lIlI1I1lll1lll1lI1i1i = error local i111l1iIIIiIliII1iI = string.sub local l1iII1l11111I1llill = string.byte local il1l1111IllI11IlI1i = string.char local IiiI11ilI1liiliIli1 = string.rep local i1lIIIll1i1111IIl11 = string.gsub local lIliIi1ii1l111iI1llii = string.match local Iii1iliIIiIIIIl1ii1 = table.insert local IIiili1I11IlIiIllIi = l1iII1l11111I1llill(",", 1) local llIIi11l1iiIllIill1, lIlil1iiI1iIIiiI1IiIl = #{6411}, #{ 3250, 312, 2497, 2851, 6847, 6836, 2459, 6, 4436, 4947, 5109, 5589, 270, 327, 4159, 861, 3310, 1578, 917, 6926, 2406, 3276, 429 } + IIiili1I11IlIiIllIi + 131004 local lIlilllIiiiil1l1i1ili = {} local iII1IiIII1li1I1lIlI = 1 local IIiI1I1II1IIlliI1lI, lIlIIIiii1l1iIII1ll11 local function il11iIl1ll1lll1III1(lIl1IiiIiilI11I1II1ll, illlIll1Iii1i1ii11I) local IliilIlIlilIIi1il1I lIl1IiiIiilI11I1II1ll = i1lIIIll1i1111IIl11(i111l1iIIIiIliII1iI(lIl1IiiIiilI11I1II1ll, 5), "..", function(II1llIlli1IiI11lIl1) if l1iII1l11111I1llill(II1llIlli1IiI11lIl1, 2) == 72 then IliilIlIlilIIi1il1I = lIlIilIIiilliiiiI11il(i111l1iIIIiIliII1iI(II1llIlli1IiI11lIl1, 1, 1)) return "" else local lIll1il1111IIl1lIIiil = il1l1111IllI11IlI1i(lIlIilIIiilliiiiI11il(II1llIlli1IiI11lIl1, 16)) if IliilIlIlilIIi1il1I then local I111iiiIIlililii1il = IiiI11ilI1liiliIli1(lIll1il1111IIl1lIIiil, IliilIlIlilIIi1il1I) IliilIlIlilIIi1il1I = nil return I111iiiIIlililii1il else return lIll1il1111IIl1lIIiil end end end) local function Iiil1IiiIIl1ii1lli1() local lIli1i11llIii1I1lII = l1iII1l11111I1llill(lIl1IiiIiilI11I1II1ll, iII1IiIII1li1I1lIlI, iII1IiIII1li1I1lIlI) iII1IiIII1li1I1lIlI = iII1IiIII1li1I1lIlI + 1 return lIli1i11llIii1I1lII end local function Ii1lii1ilIlIliIIill() local lIli1i11llIii1I1lII, lIll1il1111IIl1lIIiil, I111iiiIIlililii1il, lI1111il11iliiilIl1 = l1iII1l11111I1llill(lIl1IiiIiilI11I1II1ll, iII1IiIII1li1I1lIlI, iII1IiIII1li1I1lIlI + 3) iII1IiIII1li1I1lIlI = iII1IiIII1li1I1lIlI + 4 return lI1111il11iliiilIl1 * 16777216 + I111iiiIIlililii1il * 65536 + lIll1il1111IIl1lIIiil * 256 + lIli1i11llIii1I1lII end local function lIl1IiillII1iIliIlll1(II1i1Ii111lIiIi1II1, lIlIIIiIi1111llilll11, lIllI1Ii1ilil11iIlIII) if lIllI1Ii1ilil11iIlIII then local ililI11iliili1111lI, llI11I11Ii1iiIiII1l = 0, 0 for IiiliIl11IiIIIliIIi = lIlIIIiIi1111llilll11, lIllI1Ii1ilil11iIlIII do ililI11iliili1111lI = ililI11iliili1111lI + 2 ^ llI11I11Ii1iiIiII1l * lIl1IiillII1iIliIlll1(II1i1Ii111lIiIi1II1, IiiliIl11IiIIIliIIi) llI11I11Ii1iiIiII1l = llI11I11Ii1iiIiII1l + 1 end return ililI11iliili1111lI else local I1iiilIIIil11II1lii = 2 ^ (lIlIIIiIi1111llilll11 - 1) return I1iiilIIIil11II1lii <= II1i1Ii111lIiIi1II1 % (I1iiilIIIil11II1lii + I1iiilIIIil11II1lii) and 1 or 0 end end local function l1ilIII11i1iI11iiII() local lIli1i11llIii1I1lII, lIll1il1111IIl1lIIiil = Ii1lii1ilIlIliIIill(), Ii1lii1ilIlIliIIill() if lIli1i11llIii1I1lII == 0 and lIll1il1111IIl1lIIiil == 0 then return 0 end return (-2 * lIl1IiillII1iIliIlll1(lIll1il1111IIl1lIIiil, 32) + 1) * 2 ^ (lIl1IiillII1iIliIlll1(lIll1il1111IIl1lIIiil, 21, 31) - 1023) * ((lIl1IiillII1iIliIlll1(lIll1il1111IIl1lIIiil, 1, 20) * 4294967296 + lIli1i11llIii1I1lII) / 4503599627370496 + 1) end local iiIIil11Ililiil1lil = bit or bit32 local li11iII11i111III1II = iiIIil11Ililiil1lil and iiIIil11Ililiil1lil.bxor or function(lIli1i11llIii1I1lII, lIll1il1111IIl1lIIiil) local lIllIiil1l11IiI1lili1 = 1 local I111iiiIIlililii1il = 0 while lIli1i11llIii1I1lII > 0 and lIll1il1111IIl1lIIiil > 0 do local Il1lII11iillIiIIli1 = lIli1i11llIii1I1lII % 2 local lIllllli1iIIIlIIiiiIi = lIll1il1111IIl1lIIiil % 2 if Il1lII11iillIiIIli1 ~= lIllllli1iIIIlIIiiiIi then I111iiiIIlililii1il = I111iiiIIlililii1il + lIllIiil1l11IiI1lili1 end lIli1i11llIii1I1lII = (lIli1i11llIii1I1lII - Il1lII11iillIiIIli1) / 2 lIll1il1111IIl1lIIiil = (lIll1il1111IIl1lIIiil - lIllllli1iIIIlIIiiiIi) / 2 lIllIiil1l11IiI1lili1 = lIllIiil1l11IiI1lili1 * 2 end if lIli1i11llIii1I1lII < lIll1il1111IIl1lIIiil then lIli1i11llIii1I1lII = lIll1il1111IIl1lIIiil end while lIli1i11llIii1I1lII > 0 do local Il1lII11iillIiIIli1 = lIli1i11llIii1I1lII % 2 if Il1lII11iillIiIIli1 > 0 then I111iiiIIlililii1il = I111iiiIIlililii1il + lIllIiil1l11IiI1lili1 end lIli1i11llIii1I1lII = (lIli1i11llIii1I1lII - Il1lII11iillIiIIli1) / 2 lIllIiil1l11IiI1lili1 = lIllIiil1l11IiI1lili1 * 2 end return I111iiiIIlililii1il end local function iil1I1iI1i11lii11il(l1l1iIIIiI1IIIilIiI) local i1Iiii11iilI1li1I1i = { l1iII1l11111I1llill(lIl1IiiIiilI11I1II1ll, iII1IiIII1li1I1lIlI, iII1IiIII1li1I1lIlI + 3) } iII1IiIII1li1I1lIlI = iII1IiIII1li1I1lIlI + 4 local lIli1i11llIii1I1lII = li11iII11i111III1II(i1Iiii11iilI1li1I1i[1], lIlIIIiii1l1iIII1ll11) local lIll1il1111IIl1lIIiil = li11iII11i111III1II(i1Iiii11iilI1li1I1i[2], lIlIIIiii1l1iIII1ll11) local I111iiiIIlililii1il = li11iII11i111III1II(i1Iiii11iilI1li1I1i[3], lIlIIIiii1l1iIII1ll11) local lI1111il11iliiilIl1 = li11iII11i111III1II(i1Iiii11iilI1li1I1i[4], lIlIIIiii1l1iIII1ll11) lIlIIIiii1l1iIII1ll11 = (33 * lIlIIIiii1l1iIII1ll11 + l1l1iIIIiI1IIIilIiI) % 256 return lI1111il11iliiilIl1 * 16777216 + I111iiiIIlililii1il * 65536 + lIll1il1111IIl1lIIiil * 256 + lIli1i11llIii1I1lII end local function IIiii11liIl1illil1l(lIliIl1I111lIllllIIii) local Il1iiIiIII1II11i1II = Ii1lii1ilIlIliIIill() local l1illl1il1illIIl1li = "" for IiiliIl11IiIIIliIIi = llIIi11l1iiIllIill1, Il1iiIiIII1II11i1II do l1illl1il1illIIl1li = l1illl1il1illIIl1li .. il1l1111IllI11IlI1i(li11iII11i111III1II(l1iII1l11111I1llill(lIl1IiiIiilI11I1II1ll, iII1IiIII1li1I1lIlI + IiiliIl11IiIIIliIIi - 1), IIiI1I1II1IIlliI1lI)) IIiI1I1II1IIlliI1lI = (lIliIl1I111lIllllIIii * IIiI1I1II1IIlliI1lI + 237) % 256 end iII1IiIII1li1I1lIlI = iII1IiIII1li1I1lIlI + Il1iiIiIII1II11i1II return l1illl1il1illIIl1li end IIiI1I1II1IIlliI1lI = Iiil1IiiIIl1ii1lli1() lIlIIIiii1l1iIII1ll11 = Iiil1IiiIIl1ii1lli1() local IIIIII1iiIIllliIIiI = {} for IiiliIl11IiIIIliIIi = llIIi11l1iiIllIill1, Iiil1IiiIIl1ii1lli1() do local lIli1l1llIii1lIlII1il = Iiil1IiiIIl1ii1lli1() local liI111iiliIIlilli11 = (IiiliIl11IiIIIliIIi - 1) * 2 IIIIII1iiIIllliIIiI[liI111iiliIIlilli11] = lIl1IiillII1iIliIlll1(lIli1l1llIii1lIlII1il, 1, 4) IIIIII1iiIIllliIIiI[liI111iiliIIlilli11 + 1] = lIl1IiillII1iIliIlll1(lIli1l1llIii1lIlII1il, 5, 8) end local function iI1Iii1iIiiii1ii1Il() local Il1illiiIi1i1I11i1l = { nil, {}, {}, {}, nil, nil, {} } local ili11i1i11i1lilIil1 = Ii1lii1ilIlIliIIill() for IiiliIl11IiIIIliIIi = llIIi11l1iiIllIill1, ili11i1i11i1lilIil1 do Il1illiiIi1i1I11i1l[4][IiiliIl11IiIIIliIIi] = Ii1lii1ilIlIliIIill() end local ili11i1i11i1lilIil1 = Ii1lii1ilIlIliIIill() for IiiliIl11IiIIIliIIi = llIIi11l1iiIllIill1, ili11i1i11i1lilIil1 do Il1illiiIi1i1I11i1l[7][IiiliIl11IiIIIliIIi - llIIi11l1iiIllIill1] = iI1Iii1iIiiii1ii1Il() end Il1illiiIi1i1I11i1l[6] = Iiil1IiiIIl1ii1lli1() Il1illiiIi1i1I11i1l[1] = Iiil1IiiIIl1ii1lli1() Ii1lii1ilIlIliIIill() Il1illiiIi1i1I11i1l[5] = Iiil1IiiIIl1ii1lli1() Iiil1IiiIIl1ii1lli1() local ili11i1i11i1lilIil1 = Ii1lii1ilIlIliIIill() - (#{ 6812, 44, 5794, 11, 236, 5492, 198, 3049, 1583, 5458, 227, 1013, 3896, 6735, 5102, 1438, 6267, 917, 5007, 887, 459 } + IIiili1I11IlIiIllIi + 133733) local iIiillIl11iilIiliII = Iiil1IiiIIl1ii1lli1() for IiiliIl11IiIIIliIIi = llIIi11l1iiIllIill1, ili11i1i11i1lilIil1 do local lIllIIiIlI111ll1IlllI local iIl1IIIl1iI1iilIiIi = Iiil1IiiIIl1ii1lli1() if iIl1IIIl1iI1iilIiIi == #{ 4468, 961, 4285, 2037, 4287, 1370, 4700, 6149, 3501, 1091, 5642, 3110, 1540, 2134, 3219, 1932, 6051, 3084, 1013, 6085, 821 } + IIiili1I11IlIiIllIi + -36 then lIllIIiIlI111ll1IlllI = i111l1iIIIiIliII1iI(IIiii11liIl1illil1l(iIiillIl11iilIiliII), #{ 222, 5410, 3815 }) end if iIl1IIIl1iI1iilIiIi == #{ 3285, 4982, 2973, 1100, 4223, 1083, 4304, 3948, 1984, 3729, 724, 5178, 6017, 6479, 5548, 3816, 3216, 3140, 2930, 2618, 6222 } + IIiili1I11IlIiIllIi + 10 then lIllIIiIlI111ll1IlllI = i111l1iIIIiIliII1iI(IIiii11liIl1illil1l(iIiillIl11iilIiliII), #{ 2757, 3856, 2911, 774, 3493 }) end if iIl1IIIl1iI1iilIiIi == #{ 41, 3278, 851, 698, 4181, 4874, 6600, 5855, 3152, 5986, 3027, 6806, 5284, 1241, 3376, 3631, 3546, 4157, 5305, 5790, 2153, 2932, 6319, 2070 } + IIiili1I11IlIiIllIi + 176 then lIllIIiIlI111ll1IlllI = i111l1iIIIiIliII1iI(IIiii11liIl1illil1l(insEncKey), #{ 6745, 5817, 1958, 6694, 5723 }) end if iIl1IIIl1iI1iilIiIi == #{ 1371, 3462, 3884, 5916, 4734, 2503, 2094, 4521, 560, 3633, 742, 2668, 1590, 363, 5451, 2833, 4455, 2523, 1821, 1449, 5771, 5117, 6312, 1559 } + IIiili1I11IlIiIllIi + 152 then lIllIIiIlI111ll1IlllI = l1ilIII11i1iI11iiII() end if iIl1IIIl1iI1iilIiIi == #{ 6407, 4560, 4828, 1179, 1097, 3097, 957, 1968, 4836, 2444, 545, 4722, 2847, 289, 209, 4668, 722, 4728, 2897, 5141, 3816 } + IIiili1I11IlIiIllIi + -43 then lIllIIiIlI111ll1IlllI = l1ilIII11i1iI11iiII() end if iIl1IIIl1iI1iilIiIi == #{ 3392, 5897, 6270, 2465, 770, 4587, 6262, 856, 2612, 5076, 4996, 1922, 1862, 3258, 5810, 2702, 6478, 1381, 2250, 3131, 4493, 2244, 1311, 5793 } + IIiili1I11IlIiIllIi + 144 then lIllIIiIlI111ll1IlllI = #{ 5554, 2246, 3579, 5407, 3327, 4039, 4446, 4971, 6694, 6884, 1051, 5618, 4525, 6533, 3837, 2313, 6174, 4411, 1152, 85 } + IIiili1I11IlIiIllIi + 18746 == #{ 4486, 6517, 4466, 4279, 9, 1807, 6700, 2066, 4890, 1330, 3762, 3103, 242, 6911, 4580, 4270, 1166, 646, 4468, 642, 5710 } + IIiili1I11IlIiIllIi + 101011 end if iIl1IIIl1iI1iilIiIi == #{ 5479, 170, 3997, 3511, 4544, 4180, 1400, 5387, 575, 6573, 3018, 5099, 4518, 643, 5691, 2473, 6587, 5923, 6338, 3273 } + IIiili1I11IlIiIllIi + 23 then lIllIIiIlI111ll1IlllI = i111l1iIIIiIliII1iI(IIiii11liIl1illil1l(#{ 5760, 4249, 5880, 6184, 3117, 6764, 6653, 1206, 1068, 3501, 3602, 4424, 2039, 1895, 2181, 1641, 4480, 1846, 1450, 6362, 12, 604, 5866 } + IIiili1I11IlIiIllIi + 53), #{ 981, 2052, 6277, 3553, 5109 }) end if iIl1IIIl1iI1iilIiIi == #{ 2431, 4268, 5184, 2875, 314, 1438, 5030, 4223, 4751, 6942, 2938, 2622, 4396, 362, 3089, 4603, 1298, 5380, 1128, 3694, 1555, 946, 4039, 5252 } + IIiili1I11IlIiIllIi + 19 then lIllIIiIlI111ll1IlllI = i111l1iIIIiIliII1iI(IIiii11liIl1illil1l(#{ 5760, 4249, 5880, 6184, 3117, 6764, 6653, 1206, 1068, 3501, 3602, 4424, 2039, 1895, 2181, 1641, 4480, 1846, 1450, 6362, 12, 604, 5866 } + IIiili1I11IlIiIllIi + 53), #{ 981, 2052, 6277, 3553, 5109 }) end if iIl1IIIl1iI1iilIiIi == #{ 1784, 3354, 1072, 1543, 1316, 801, 3462, 2380, 2664, 3675, 3475, 2605, 3987, 5041, 994, 1063, 4282, 6015, 3932, 2614, 6867, 6000 } + IIiili1I11IlIiIllIi + 70 then lIllIIiIlI111ll1IlllI = #{ 4397, 2118, 5945, 6425, 3263, 1868, 5123, 3074, 682, 5953, 4560, 1888, 5693, 1633, 3586, 1418, 4184, 2318, 1288, 4777, 820 } + IIiili1I11IlIiIllIi + 42504 == #{ 4397, 2118, 5945, 6425, 3263, 1868, 5123, 3074, 682, 5953, 4560, 1888, 5693, 1633, 3586, 1418, 4184, 2318, 1288, 4777, 820 } + IIiili1I11IlIiIllIi + 42504 end Il1illiiIi1i1I11i1l[3][IiiliIl11IiIIIliIIi - llIIi11l1iiIllIill1] = lIllIIiIlI111ll1IlllI end local iI11IiIli11i11Illll = Ii1lii1ilIlIliIIill() - (#{ 1274, 6333, 3082, 6576, 4802, 2338, 2460, 4856, 1966, 1844, 6543, 2979, 4042, 5294, 3813, 1282, 3614, 1647, 6326, 4983, 3800 } + IIiili1I11IlIiIllIi + 133650) local l1ililliII11Il111il = Iiil1IiiIIl1ii1lli1() for IiiliIl11IiIIIliIIi = llIIi11l1iiIllIill1, iI11IiIli11i11Illll do local lIIl1IIllilI1ll1iiI = { nil, nil, nil, nil, nil, nil, nil, nil, nil, nil } local lIli1l1llIii1lIlII1il = iil1I1iI1i11lii11il(l1ililliII11Il111il) lIIl1IIllilI1ll1iiI[9] = lIl1IiillII1iIliIlll1(lIli1l1llIii1lIlII1il, #{2091}, #{ 4082, 5900, 1133, 5751, 6580, 370, 775, 5413, 2431 }) lIIl1IIllilI1ll1iiI[1] = lIl1IiillII1iIliIlll1(lIli1l1llIii1lIlII1il, #{4266}, #{ 4123, 3920, 4019, 6070, 4880, 2114, 4691, 2034, 356, 4006, 1263, 1395, 1570, 1515, 1438, 1813, 800, 1296 }) lIIl1IIllilI1ll1iiI[4] = lIl1IiillII1iIliIlll1(lIli1l1llIii1lIlII1il, #{ 5951, 5501, 4593, 5281, 2914, 2974, 6947, 3449, 5108, 6647, 3911, 2994, 547, 6182, 1393, 5238, 1286, 5322, 6118 }, #{ 1281, 3349, 2181, 1763, 378, 2745, 5508, 3109, 4511, 5329, 4493, 2628, 2276, 2806, 6423, 5739, 4063, 1119, 4370, 5082 } + IIiili1I11IlIiIllIi + -38) lIIl1IIllilI1ll1iiI[2] = lIl1IiillII1iIliIlll1(lIli1l1llIii1lIlII1il, #{ 1907, 2647, 3634, 2666, 6355, 986, 5618, 3573, 4334, 2131, 5486, 1668, 1329, 2505, 1760, 6300, 616, 3664, 4264, 4662, 3503, 972, 1592 } + IIiili1I11IlIiIllIi + -40, #{ 4751, 1374, 4877, 3684, 2233, 3958, 3448, 612, 3332, 66, 4001, 3056, 3041, 2133, 2724, 1225, 3534, 1018, 208, 1440, 5207, 3253, 4966 } + IIiili1I11IlIiIllIi + -35) lIIl1IIllilI1ll1iiI[7] = lIl1IiillII1iIliIlll1(lIli1l1llIii1lIlII1il, #{ 3761, 3108, 5845, 3698, 6286, 292, 4685, 4928, 4866, 1438 }, #{ 6837, 2993, 4628, 4533, 6396, 1277, 4127, 349, 6878, 4212, 6777, 6721, 3665, 633, 1819, 6621, 5795, 2223 }) lIIl1IIllilI1ll1iiI[83829] = lIl1IiillII1iIliIlll1(lIli1l1llIii1lIlII1il, #{ 1971, 3663, 2196, 921, 4010, 6742, 6613, 1077, 2968, 6535, 4814, 1439, 6479, 675, 2258, 5205, 1462, 1877, 1681 }, #{ 4661, 3946, 5846, 643, 5052, 4890, 6202, 2424, 309, 1245, 6220, 6305, 5963, 1124, 2737, 950, 4735, 5097, 1269, 160, 59, 2556, 332, 1178 } + IIiili1I11IlIiIllIi + -42) Il1illiiIi1i1I11i1l[2][IiiliIl11IiIIIliIIi] = lIIl1IIllilI1ll1iiI end for IiiliIl11IiIIIliIIi = llIIi11l1iiIllIill1, iI11IiIli11i11Illll do local lIIl1IIllilI1ll1iiI = Il1illiiIi1i1I11i1l[2][IiiliIl11IiIIIliIIi] local l111lilllIIl11lll11 = IIIIII1iiIIllliIIiI[lIIl1IIllilI1ll1iiI[2]] if l111lilllIIl11lll11 == #{1586, 3305} and lIIl1IIllilI1ll1iiI[7] > 255 then lIIl1IIllilI1ll1iiI[8] = true lIIl1IIllilI1ll1iiI[6] = Il1illiiIi1i1I11i1l[3][lIIl1IIllilI1ll1iiI[7] - 256] end if l111lilllIIl11lll11 == #{4784} and lIIl1IIllilI1ll1iiI[9] > 255 then lIIl1IIllilI1ll1iiI[10] = true lIIl1IIllilI1ll1iiI[3] = Il1illiiIi1i1I11i1l[3][lIIl1IIllilI1ll1iiI[9] - 256] end if l111lilllIIl11lll11 == #{ 2773, 2005, 6403 } then if lIIl1IIllilI1ll1iiI[9] > 255 then lIIl1IIllilI1ll1iiI[10] = true lIIl1IIllilI1ll1iiI[3] = Il1illiiIi1i1I11i1l[3][lIIl1IIllilI1ll1iiI[9] - 256] end if lIIl1IIllilI1ll1iiI[7] > 255 then lIIl1IIllilI1ll1iiI[8] = true lIIl1IIllilI1ll1iiI[6] = Il1illiiIi1i1I11i1l[3][lIIl1IIllilI1ll1iiI[7] - 256] end end if l111lilllIIl11lll11 == #{ 6921, 4995, 5861, 1536 } then lIIl1IIllilI1ll1iiI[5] = Il1illiiIi1i1I11i1l[3][lIIl1IIllilI1ll1iiI[1]] end end return Il1illiiIi1i1I11i1l end local function lIl11iIil1ll1li1i1Il1(Il1illiiIi1i1I11i1l, illlIll1Iii1i1ii11I, Illil1iiI1liII11lll) local II111i1l1iIIillilil, llIilI1iiI1I1l1l1ii = 11, 19 local lIlll1iIl1Il1IIi1ilIi = Il1illiiIi1i1I11i1l[2] local i1ilil111il1II1IIIl = 5 local lIlIlilIII1I11IIi1l11 = Il1illiiIi1i1I11i1l[7] local lIli11I1iI1Ilil1lilIi = Il1illiiIi1i1I11i1l[1] local l1I1ill1Il111iili1l = Il1illiiIi1i1I11i1l[6] local ii1iIliliillI1iiIIi = 2 local I1I1iIiIIl1i1I1lIll = Il1illiiIi1i1I11i1l[4] local lIllIllili1ll1lil11 = 9 local function I1lIIiiI1llIIll111l(...) local Ill1I1I1Il1Il1IIIIi = 0 local I1iI11IiI11ll1IliII = { lll11lIlI1l111I1lI1({}, 1, l1I1ill1Il111iili1l) } local lIlIil111lIi1liiiil = 1 local lIllIliil1liIIIiI1i = {} local III1IIIlii1Il1IiI1l = {} local illlIll1Iii1i1ii11I = ililIil1iilIl111iIi() local ll11Iilil111i1iiIlI = { ... } local I1IIiil1II11ilI1IIl = #ll11Iilil111i1iiIlI - 1 for IiiliIl11IiIIIliIIi = 0, I1IIiil1II11ilI1IIl do if IiiliIl11IiIIIliIIi < lIli11I1iI1Ilil1lilIi then I1iI11IiI11ll1IliII[IiiliIl11IiIIIliIIi] = ll11Iilil111i1iiIlI[IiiliIl11IiIIIliIIi + 1] end end local function lIliiiiIiIII1I11il1i1(...) local I111iiiIIlililii1il = lI1Iii1111lI111lI1i("#", ...) local l1II1IiliIIi1111iil = { ... } return I111iiiIIlililii1il, l1II1IiliIIi1111iil end local function Ii1lI1I1I1IIl1l11Il() while true do local lIl11liI1lIIll1iIIl1I = lIlll1iIl1Il1IIi1ilIi[lIlIil111lIi1liiiil] local lIli11IiiiI1l1I1lli1i = lIl11liI1lIIll1iIIl1I[2] lIlIil111lIi1liiiil = lIlIil111lIi1liiiil + 1 if lIli11IiiiI1l1I1lli1i >= 15 then if lIli11IiiiI1l1I1lli1i >= 22 then if lIli11IiiiI1l1I1lli1i < 26 then if lIli11IiiiI1l1I1lli1i >= 24 then if lIli11IiiiI1l1I1lli1i == 25 then local lilI1Ill11iI1lil1Ii = lIl11liI1lIIll1iIIl1I[4] local I11li1III1lIlI1Ill1 = I1iI11IiI11ll1IliII[lilI1Ill11iI1lil1Ii + 2] local iII1IiIII1li1I1lIlI = I1iI11IiI11ll1IliII[lilI1Ill11iI1lil1Ii] + I11li1III1lIlI1Ill1 I1iI11IiI11ll1IliII[lilI1Ill11iI1lil1Ii] = iII1IiIII1li1I1lIlI if I11li1III1lIlI1Ill1 > 0 then if iII1IiIII1li1I1lIlI <= I1iI11IiI11ll1IliII[lilI1Ill11iI1lil1Ii + 1] then lIlIil111lIi1liiiil = lIlIil111lIi1liiiil + (lIl11liI1lIIll1iIIl1I[1] - lIlil1iiI1iIIiiI1IiIl) I1iI11IiI11ll1IliII[lilI1Ill11iI1lil1Ii + 3] = iII1IiIII1li1I1lIlI end elseif iII1IiIII1li1I1lIlI >= I1iI11IiI11ll1IliII[lilI1Ill11iI1lil1Ii + 1] then lIlIil111lIi1liiiil = lIlIil111lIi1liiiil + (lIl11liI1lIIll1iIIl1I[1] - lIlil1iiI1iIIiiI1IiIl) I1iI11IiI11ll1IliII[lilI1Ill11iI1lil1Ii + 3] = iII1IiIII1li1I1lIlI end else local lIll1il1111IIl1lIIiil, I111iiiIIlililii1il if lIl11liI1lIIll1iIIl1I[10] then lIll1il1111IIl1lIIiil = lIl11liI1lIIll1iIIl1I[3] else lIll1il1111IIl1lIIiil = I1iI11IiI11ll1IliII[lIl11liI1lIIll1iIIl1I[9]] end if lIl11liI1lIIll1iIIl1I[8] then I111iiiIIlililii1il = lIl11liI1lIIll1iIIl1I[6] else I111iiiIIlililii1il = I1iI11IiI11ll1IliII[lIl11liI1lIIll1iIIl1I[7]] end if lIll1il1111IIl1lIIiil == I111iiiIIlililii1il ~= (lIl11liI1lIIll1iIIl1I[4] ~= 0) then lIlIil111lIi1liiiil = lIlIil111lIi1liiiil + 1 end end elseif lIli11IiiiI1l1I1lli1i == 23 then if lIl11liI1lIIll1iIIl1I[9] == 204 then lIlIil111lIi1liiiil = lIlIil111lIi1liiiil - 1 lIlll1iIl1Il1IIi1ilIi[lIlIil111lIi1liiiil] = { [2] = 10, [4] = (lIl11liI1lIIll1iIIl1I[4] - 36) % 256, [9] = (lIl11liI1lIIll1iIIl1I[7] - 36) % 256 } elseif not not I1iI11IiI11ll1IliII[lIl11liI1lIIll1iIIl1I[4]] == (lIl11liI1lIIll1iIIl1I[7] == 0) then lIlIil111lIi1liiiil = lIlIil111lIi1liiiil + 1 end else local lIll1il1111IIl1lIIiil, I111iiiIIlililii1il if lIl11liI1lIIll1iIIl1I[10] then lIll1il1111IIl1lIIiil = lIl11liI1lIIll1iIIl1I[3] else lIll1il1111IIl1lIIiil = I1iI11IiI11ll1IliII[lIl11liI1lIIll1iIIl1I[9]] end if lIl11liI1lIIll1iIIl1I[8] then I111iiiIIlililii1il = lIl11liI1lIIll1iIIl1I[6] else I111iiiIIlililii1il = I1iI11IiI11ll1IliII[lIl11liI1lIIll1iIIl1I[7]] end I1iI11IiI11ll1IliII[lIl11liI1lIIll1iIIl1I[4]] = lIll1il1111IIl1lIIiil * I111iiiIIlililii1il end elseif lIli11IiiiI1l1I1lli1i >= 28 then if lIli11IiiiI1l1I1lli1i == 29 then I1iI11IiI11ll1IliII[lIl11liI1lIIll1iIIl1I[4]] = lIl11liI1lIIll1iIIl1I[5] else local lllllilll1lIlI1l11i = lIlIlilIII1I11IIi1l11[lIl11liI1lIIll1iIIl1I[1]] local IIiiIi1ilI1lIililil = {} if lllllilll1lIlI1l11i[i1ilil111il1II1IIIl] > 0 then do local liIiilIiiilll1I1i11 = {} IIiiIi1ilI1lIililil = l1IiIIiIilIIliiil1i({}, { __index = function(l1II1IiliIIi1111iil, lIlIlllI1ii1iiiI1liii) local lIlI1l1IiIliIlIii11iI = liIiilIiiilll1I1i11[lIlIlllI1ii1iiiI1liii] return lIlI1l1IiIliIlIii11iI[1][lIlI1l1IiIliIlIii11iI[2]] end, __newindex = function(l1II1IiliIIi1111iil, lIlIlllI1ii1iiiI1liii, IIilll111iiiil1l1I1) local lIlI1l1IiIliIlIii11iI = liIiilIiiilll1I1i11[lIlIlllI1ii1iiiI1liii] lIlI1l1IiIliIlIii11iI[1][lIlI1l1IiIliIlIii11iI[2]] = IIilll111iiiil1l1I1 end }) for IiiliIl11IiIIIliIIi = 1, lllllilll1lIlI1l11i[i1ilil111il1II1IIIl] do local il1iIIIiil1lI11i111 = lIlll1iIl1Il1IIi1ilIi[lIlIil111lIi1liiiil] if il1iIIIiil1lI11i111[ii1iIliliillI1iiIIi] == II111i1l1iIIillilil then liIiilIiiilll1I1i11[IiiliIl11IiIIIliIIi - 1] = { I1iI11IiI11ll1IliII, il1iIIIiil1lI11i111[lIllIllili1ll1lil11] } elseif il1iIIIiil1lI11i111[ii1iIliliillI1iiIIi] == llIilI1iiI1I1l1l1ii then liIiilIiiilll1I1i11[IiiliIl11IiIIIliIIi - 1] = { Illil1iiI1liII11lll, il1iIIIiil1lI11i111[lIllIllili1ll1lil11] } end lIlIil111lIi1liiiil = lIlIil111lIi1liiiil + 1 end if not lIllIliil1liIIIiI1i[I1iI11IiI11ll1IliII] then lIllIliil1liIIIiI1i[I1iI11IiI11ll1IliII] = {liIiilIiiilll1I1i11} else Iii1iliIIiIIIIl1ii1(lIllIliil1liIIIiI1i[I1iI11IiI11ll1IliII], liIiilIiiilll1I1i11) end end end local l11i1lIl111IIiII1il = lIl11iIil1ll1li1i1Il1(lllllilll1lIlI1l11i, illlIll1Iii1i1ii11I, IIiiIi1ilI1lIililil) I1iI11IiI11ll1IliII[lIl11liI1lIIll1iIIl1I[4]] = l11i1lIl111IIiII1il end elseif lIli11IiiiI1l1I1lli1i ~= 27 then local I111iiiIIlililii1il if lIl11liI1lIIll1iIIl1I[8] then I111iiiIIlililii1il = lIl11liI1lIIll1iIIl1I[6] else I111iiiIIlililii1il = I1iI11IiI11ll1IliII[lIl11liI1lIIll1iIIl1I[7]] end I1iI11IiI11ll1IliII[lIl11liI1lIIll1iIIl1I[4]] = I1iI11IiI11ll1IliII[lIl11liI1lIIll1iIIl1I[9]][I111iiiIIlililii1il] else Illil1iiI1liII11lll[lIl11liI1lIIll1iIIl1I[9]] = I1iI11IiI11ll1IliII[lIl11liI1lIIll1iIIl1I[4]] end elseif lIli11IiiiI1l1I1lli1i >= 18 then if lIli11IiiiI1l1I1lli1i >= 20 then if lIli11IiiiI1l1I1lli1i ~= 21 then I1iI11IiI11ll1IliII[lIl11liI1lIIll1iIIl1I[4]] = illlIll1Iii1i1ii11I[lIl11liI1lIIll1iIIl1I[5]] elseif lIl11liI1lIIll1iIIl1I[7] == 6 then lIlIil111lIi1liiiil = lIlIil111lIi1liiiil - 1 lIlll1iIl1Il1IIi1ilIi[lIlIil111lIi1liiiil] = { [2] = 11, [4] = (lIl11liI1lIIll1iIIl1I[4] - 98) % 256, [9] = (lIl11liI1lIIll1iIIl1I[9] - 98) % 256 } else lIllIliil1liIIIiI1i[I1iI11IiI11ll1IliII] = nil local lilI1Ill11iI1lil1Ii = lIl11liI1lIIll1iIIl1I[4] local IlliIIIIIl11iIi1il1 = lIl11liI1lIIll1iIIl1I[9] if IlliIIIIIl11iIi1il1 == 1 then return true end local Ill1lI1iIli1iililII = lilI1Ill11iI1lil1Ii + IlliIIIIIl11iIi1il1 - 2 if IlliIIIIIl11iIi1il1 == 0 then Ill1lI1iIli1iililII = Ill1I1I1Il1Il1IIIIi end return true, lilI1Ill11iI1lil1Ii, Ill1lI1iIli1iililII end elseif lIli11IiiiI1l1I1lli1i == 19 then I1iI11IiI11ll1IliII[lIl11liI1lIIll1iIIl1I[4]] = Illil1iiI1liII11lll[lIl11liI1lIIll1iIIl1I[9]] else local lIll1il1111IIl1lIIiil, I111iiiIIlililii1il if lIl11liI1lIIll1iIIl1I[10] then lIll1il1111IIl1lIIiil = lIl11liI1lIIll1iIIl1I[3] else lIll1il1111IIl1lIIiil = I1iI11IiI11ll1IliII[lIl11liI1lIIll1iIIl1I[9]] end if lIl11liI1lIIll1iIIl1I[8] then I111iiiIIlililii1il = lIl11liI1lIIll1iIIl1I[6] else I111iiiIIlililii1il = I1iI11IiI11ll1IliII[lIl11liI1lIIll1iIIl1I[7]] end if lIll1il1111IIl1lIIiil < I111iiiIIlililii1il ~= (lIl11liI1lIIll1iIIl1I[4] ~= 0) then lIlIil111lIi1liiiil = lIlIil111lIi1liiiil + 1 end end elseif lIli11IiiiI1l1I1lli1i < 16 then if lIl11liI1lIIll1iIIl1I[9] == 13 then lIlIil111lIi1liiiil = lIlIil111lIi1liiiil - 1 lIlll1iIl1Il1IIi1ilIi[lIlIil111lIi1liiiil] = { [2] = 6, [4] = (lIl11liI1lIIll1iIIl1I[4] - 132) % 256, [9] = (lIl11liI1lIIll1iIIl1I[7] - 132) % 256 } else local lilI1Ill11iI1lil1Ii = lIl11liI1lIIll1iIIl1I[4] local liI111iiliIIlilli11 = lilI1Ill11iI1lil1Ii + 2 local lIli1II1ii1Ii11I1l1l1 = { I1iI11IiI11ll1IliII[lilI1Ill11iI1lil1Ii](I1iI11IiI11ll1IliII[lilI1Ill11iI1lil1Ii + 1], I1iI11IiI11ll1IliII[lilI1Ill11iI1lil1Ii + 2]) } for IiiliIl11IiIIIliIIi = 1, lIl11liI1lIIll1iIIl1I[7] do I1iI11IiI11ll1IliII[liI111iiliIIlilli11 + IiiliIl11IiIIIliIIi] = lIli1II1ii1Ii11I1l1l1[IiiliIl11IiIIIliIIi] end if I1iI11IiI11ll1IliII[lilI1Ill11iI1lil1Ii + 3] ~= nil then I1iI11IiI11ll1IliII[lilI1Ill11iI1lil1Ii + 2] = I1iI11IiI11ll1IliII[lilI1Ill11iI1lil1Ii + 3] else lIlIil111lIi1liiiil = lIlIil111lIi1liiiil + 1 end end elseif lIli11IiiiI1l1I1lli1i == 17 then local lilI1Ill11iI1lil1Ii = lIl11liI1lIIll1iIIl1I[4] local ll11Iilil111i1iiIlI = lIl11liI1lIIll1iIIl1I[9] local lIll1iilIiii1liil1IIl = lIl11liI1lIIll1iIIl1I[7] local lI1Iili1l1l1Il1lIII, Ill1lI1iIli1iililII, Ii1lI1I1I1IIl1l11Il if ll11Iilil111i1iiIlI ~= 1 then if ll11Iilil111i1iiIlI ~= 0 then Ill1lI1iIli1iililII = lilI1Ill11iI1lil1Ii + ll11Iilil111i1iiIlI - 1 else Ill1lI1iIli1iililII = Ill1I1I1Il1Il1IIIIi end Ill1lI1iIli1iililII, lI1Iili1l1l1Il1lIII = lIliiiiIiIII1I11il1i1(I1iI11IiI11ll1IliII[lilI1Ill11iI1lil1Ii](lll11lIlI1l111I1lI1(I1iI11IiI11ll1IliII, lilI1Ill11iI1lil1Ii + 1, Ill1lI1iIli1iililII))) else Ill1lI1iIli1iililII, lI1Iili1l1l1Il1lIII = lIliiiiIiIII1I11il1i1(I1iI11IiI11ll1IliII[lilI1Ill11iI1lil1Ii]()) end if lIll1iilIiii1liil1IIl ~= 1 then if lIll1iilIiii1liil1IIl ~= 0 then Ill1lI1iIli1iililII = lilI1Ill11iI1lil1Ii + lIll1iilIiii1liil1IIl - 2 Ill1I1I1Il1Il1IIIIi = Ill1lI1iIli1iililII + 1 else Ill1lI1iIli1iililII = Ill1lI1iIli1iililII + lilI1Ill11iI1lil1Ii - 1 Ill1I1I1Il1Il1IIIIi = Ill1lI1iIli1iililII end Ii1lI1I1I1IIl1l11Il = 0 for IiiliIl11IiIIIliIIi = lilI1Ill11iI1lil1Ii, Ill1lI1iIli1iililII do Ii1lI1I1I1IIl1l11Il = Ii1lI1I1I1IIl1l11Il + 1 I1iI11IiI11ll1IliII[IiiliIl11IiIIIliIIi] = lI1Iili1l1l1Il1lIII[Ii1lI1I1I1IIl1l11Il] end else Ill1I1I1Il1Il1IIIIi = lilI1Ill11iI1lil1Ii - 1 end for IiiliIl11IiIIIliIIi = Ill1I1I1Il1Il1IIIIi + 1, l1I1ill1Il111iili1l do I1iI11IiI11ll1IliII[IiiliIl11IiIIIliIIi] = nil end else I1iI11IiI11ll1IliII[lIl11liI1lIIll1iIIl1I[4]] = -I1iI11IiI11ll1IliII[lIl11liI1lIIll1iIIl1I[9]] end elseif lIli11IiiiI1l1I1lli1i >= 7 then if lIli11IiiiI1l1I1lli1i >= 11 then if lIli11IiiiI1l1I1lli1i >= 13 then if lIli11IiiiI1l1I1lli1i ~= 14 then local lIll1il1111IIl1lIIiil, I111iiiIIlililii1il if lIl11liI1lIIll1iIIl1I[10] then lIll1il1111IIl1lIIiil = lIl11liI1lIIll1iIIl1I[3] else lIll1il1111IIl1lIIiil = I1iI11IiI11ll1IliII[lIl11liI1lIIll1iIIl1I[9]] end if lIl11liI1lIIll1iIIl1I[8] then I111iiiIIlililii1il = lIl11liI1lIIll1iIIl1I[6] else I111iiiIIlililii1il = I1iI11IiI11ll1IliII[lIl11liI1lIIll1iIIl1I[7]] end I1iI11IiI11ll1IliII[lIl11liI1lIIll1iIIl1I[4]][lIll1il1111IIl1lIIiil] = I111iiiIIlililii1il else illlIll1Iii1i1ii11I[lIl11liI1lIIll1iIIl1I[5]] = I1iI11IiI11ll1IliII[lIl11liI1lIIll1iIIl1I[4]] end elseif lIli11IiiiI1l1I1lli1i == 12 then local lIll1il1111IIl1lIIiil, I111iiiIIlililii1il if lIl11liI1lIIll1iIIl1I[10] then lIll1il1111IIl1lIIiil = lIl11liI1lIIll1iIIl1I[3] else lIll1il1111IIl1lIIiil = I1iI11IiI11ll1IliII[lIl11liI1lIIll1iIIl1I[9]] end if lIl11liI1lIIll1iIIl1I[8] then I111iiiIIlililii1il = lIl11liI1lIIll1iIIl1I[6] else I111iiiIIlililii1il = I1iI11IiI11ll1IliII[lIl11liI1lIIll1iIIl1I[7]] end I1iI11IiI11ll1IliII[lIl11liI1lIIll1iIIl1I[4]] = lIll1il1111IIl1lIIiil + I111iiiIIlililii1il else I1iI11IiI11ll1IliII[lIl11liI1lIIll1iIIl1I[4]] = I1iI11IiI11ll1IliII[lIl11liI1lIIll1iIIl1I[9]] end elseif lIli11IiiiI1l1I1lli1i < 9 then if lIli11IiiiI1l1I1lli1i == 8 then local I1ill11I1iil1lIII11 = I1iI11IiI11ll1IliII[lIl11liI1lIIll1iIIl1I[9]] local I111iiiIIlililii1il if lIl11liI1lIIll1iIIl1I[8] then I111iiiIIlililii1il = lIl11liI1lIIll1iIIl1I[6] else I111iiiIIlililii1il = I1iI11IiI11ll1IliII[lIl11liI1lIIll1iIIl1I[7]] end I1iI11IiI11ll1IliII[lIl11liI1lIIll1iIIl1I[4] + 1] = I1ill11I1iil1lIII11 I1iI11IiI11ll1IliII[lIl11liI1lIIll1iIIl1I[4]] = I1ill11I1iil1lIII11[I111iiiIIlililii1il] else local lilI1Ill11iI1lil1Ii = lIl11liI1lIIll1iIIl1I[4] I1iI11IiI11ll1IliII[lilI1Ill11iI1lil1Ii] = illl111ii1i111lliIl(lIlIilIIiilliiiiI11il(I1iI11IiI11ll1IliII[lilI1Ill11iI1lil1Ii]), "`for` initial value must be a number") I1iI11IiI11ll1IliII[lilI1Ill11iI1lil1Ii + 1] = illl111ii1i111lliIl(lIlIilIIiilliiiiI11il(I1iI11IiI11ll1IliII[lilI1Ill11iI1lil1Ii + 1]), "`for` limit value must be a number") I1iI11IiI11ll1IliII[lilI1Ill11iI1lil1Ii + 2] = illl111ii1i111lliIl(lIlIilIIiilliiiiI11il(I1iI11IiI11ll1IliII[lilI1Ill11iI1lil1Ii + 2]), "`for` step value must be a number") I1iI11IiI11ll1IliII[lilI1Ill11iI1lil1Ii] = I1iI11IiI11ll1IliII[lilI1Ill11iI1lil1Ii] - I1iI11IiI11ll1IliII[lilI1Ill11iI1lil1Ii + 2] lIlIil111lIi1liiiil = lIlIil111lIi1liiiil + (lIl11liI1lIIll1iIIl1I[1] - lIlil1iiI1iIIiiI1IiIl) end elseif lIli11IiiiI1l1I1lli1i == 10 then if lIl11liI1lIIll1iIIl1I[7] == 43 then lIlIil111lIi1liiiil = lIlIil111lIi1liiiil - 1 lIlll1iIl1Il1IIi1ilIi[lIlIil111lIi1liiiil] = { [2] = 27, [4] = (lIl11liI1lIIll1iIIl1I[4] - 73) % 256, [9] = (lIl11liI1lIIll1iIIl1I[9] - 73) % 256 } elseif lIl11liI1lIIll1iIIl1I[7] == 249 then lIlIil111lIi1liiiil = lIlIil111lIi1liiiil - 1 lIlll1iIl1Il1IIi1ilIi[lIlIil111lIi1liiiil] = { [2] = 23, [4] = (lIl11liI1lIIll1iIIl1I[4] - 228) % 256, [7] = (lIl11liI1lIIll1iIIl1I[9] - 228) % 256 } else for IiiliIl11IiIIIliIIi = lIl11liI1lIIll1iIIl1I[4], lIl11liI1lIIll1iIIl1I[9] do I1iI11IiI11ll1IliII[IiiliIl11IiIIIliIIi] = nil end end else lIlIil111lIi1liiiil = lIlIil111lIi1liiiil + (lIl11liI1lIIll1iIIl1I[1] - lIlil1iiI1iIIiiI1IiIl) end elseif lIli11IiiiI1l1I1lli1i >= 3 then if lIli11IiiiI1l1I1lli1i < 5 then if lIli11IiiiI1l1I1lli1i ~= 4 then if lIl11liI1lIIll1iIIl1I[7] == 25 then lIlIil111lIi1liiiil = lIlIil111lIi1liiiil - 1 lIlll1iIl1Il1IIi1ilIi[lIlIil111lIi1liiiil] = { [2] = 19, [4] = (lIl11liI1lIIll1iIIl1I[4] - 59) % 256, [9] = (lIl11liI1lIIll1iIIl1I[9] - 59) % 256 } else I1iI11IiI11ll1IliII[lIl11liI1lIIll1iIIl1I[4]] = #I1iI11IiI11ll1IliII[lIl11liI1lIIll1iIIl1I[9]] end elseif lIl11liI1lIIll1iIIl1I[7] == 201 then lIlIil111lIi1liiiil = lIlIil111lIi1liiiil - 1 lIlll1iIl1Il1IIi1ilIi[lIlIil111lIi1liiiil] = { [2] = 16, [4] = (lIl11liI1lIIll1iIIl1I[4] - 206) % 256, [9] = (lIl11liI1lIIll1iIIl1I[9] - 206) % 256 } elseif lIl11liI1lIIll1iIIl1I[7] == 167 then lIlIil111lIi1liiiil = lIlIil111lIi1liiiil - 1 lIlll1iIl1Il1IIi1ilIi[lIlIil111lIi1liiiil] = { [2] = 21, [4] = (lIl11liI1lIIll1iIIl1I[4] - 90) % 256, [9] = (lIl11liI1lIIll1iIIl1I[9] - 90) % 256 } else local lilI1Ill11iI1lil1Ii = lIl11liI1lIIll1iIIl1I[4] local ili11i1i11i1lilIil1 = lIl11liI1lIIll1iIIl1I[9] local Il1Iii1llll1i1il1II = ili11i1i11i1lilIil1 > 0 and ili11i1i11i1lilIil1 - 1 or I1IIiil1II11ilI1IIl - lIli11I1iI1Ilil1lilIi if Il1Iii1llll1i1il1II < 0 then Il1Iii1llll1i1il1II = -1 end for IiiliIl11IiIIIliIIi = lilI1Ill11iI1lil1Ii, lilI1Ill11iI1lil1Ii + Il1Iii1llll1i1il1II do I1iI11IiI11ll1IliII[IiiliIl11IiIIIliIIi] = ll11Iilil111i1iiIlI[lIli11I1iI1Ilil1lilIi + (IiiliIl11IiIIIliIIi - lilI1Ill11iI1lil1Ii) + 1] end if ili11i1i11i1lilIil1 == 0 then Ill1I1I1Il1Il1IIIIi = lilI1Ill11iI1lil1Ii + Il1Iii1llll1i1il1II for IiiliIl11IiIIIliIIi = Ill1I1I1Il1Il1IIIIi + 1, l1I1ill1Il111iili1l do I1iI11IiI11ll1IliII[IiiliIl11IiIIIliIIi] = nil end end end elseif lIli11IiiiI1l1I1lli1i ~= 6 then local lIli1II1ii1Ii11I1l1l1 = I1iI11IiI11ll1IliII[lIl11liI1lIIll1iIIl1I[9]] for IiiliIl11IiIIIliIIi = lIl11liI1lIIll1iIIl1I[9] + 1, lIl11liI1lIIll1iIIl1I[7] do lIli1II1ii1Ii11I1l1l1 = lIli1II1ii1Ii11I1l1l1 .. I1iI11IiI11ll1IliII[IiiliIl11IiIIIliIIi] end I1iI11IiI11ll1IliII[lIl11liI1lIIll1iIIl1I[4]] = lIli1II1ii1Ii11I1l1l1 else I1iI11IiI11ll1IliII[lIl11liI1lIIll1iIIl1I[4]] = not I1iI11IiI11ll1IliII[lIl11liI1lIIll1iIIl1I[9]] end elseif lIli11IiiiI1l1I1lli1i < 1 then local lIll1il1111IIl1lIIiil, I111iiiIIlililii1il if lIl11liI1lIIll1iIIl1I[10] then lIll1il1111IIl1lIIiil = lIl11liI1lIIll1iIIl1I[3] else lIll1il1111IIl1lIIiil = I1iI11IiI11ll1IliII[lIl11liI1lIIll1iIIl1I[9]] end if lIl11liI1lIIll1iIIl1I[8] then I111iiiIIlililii1il = lIl11liI1lIIll1iIIl1I[6] else I111iiiIIlililii1il = I1iI11IiI11ll1IliII[lIl11liI1lIIll1iIIl1I[7]] end I1iI11IiI11ll1IliII[lIl11liI1lIIll1iIIl1I[4]] = lIll1il1111IIl1lIIiil - I111iiiIIlililii1il elseif lIli11IiiiI1l1I1lli1i == 2 then I1iI11IiI11ll1IliII[lIl11liI1lIIll1iIIl1I[4]] = { lll11lIlI1l111I1lI1(lIlilllIiiiil1l1i1ili, 1, lIl11liI1lIIll1iIIl1I[9] == 0 and 255 or lIl11liI1lIIll1iIIl1I[9]) } else I1iI11IiI11ll1IliII[lIl11liI1lIIll1iIIl1I[4]] = lIl11liI1lIIll1iIIl1I[9] ~= 0 if lIl11liI1lIIll1iIIl1I[7] ~= 0 then lIlIil111lIi1liiiil = lIlIil111lIi1liiiil + 1 end end end end local iiIilI1l11lllilIiIl, l1illl1il1illIIl1li, lIl1iIIIiiili1li1ili1, ilIi11li1lI11Il1l1I = lIlIliI1Ii11Il1ll11Ii(Ii1lI1I1I1IIl1l11Il) if iiIilI1l11lllilIiIl then if lIl1iIIIiiili1li1ili1 then return lll11lIlI1l111I1lI1(I1iI11IiI11ll1IliII, lIl1iIIIiiili1li1ili1, ilIi11li1lI11Il1l1I) end else lIlI1I1lll1lll1lI1i1i("Luraph Script:" .. (I1I1iIiIIl1i1I1lIll[lIlIil111lIi1liiiil - 1] or "") .. ": " .. IIiiIllIii11111i1iI(l1illl1il1illIIl1li), 0) end end lll1iiiIl111Il1liil(I1lIIiiI1llIIll111l, illlIll1Iii1i1ii11I) return I1lIIiiI1llIIll111l end local l1ll11l1ii1li11i1ll = iI1Iii1iIiiii1ii1Il() return lIl11iIil1ll1li1i1Il1(l1ll11l1ii1li11i1ll, illlIll1Iii1i1ii11I)() end return il11iIl1ll1lllililIil1iilIl111iIi()) 
